// +build !ignore_autogenerated

// Hello!

// Code generated by conversion-gen. DO NOT EDIT.

package internalversion

import (
	v1 "github.com/nrc-no/core/apps/api/pkg/apis/meta/v1"
	conversion "github.com/nrc-no/core/apps/api/pkg/conversion"
	runtime "github.com/nrc-no/core/apps/api/pkg/runtime"
)

func init() {
	localSchemeBuilder.Register(RegisterConversions)
}

// RegisterConversions adds conversion functions to the given scheme.
// Public to allow building arbitrary schemes.
func RegisterConversions(s *runtime.Scheme) error {
	if err := s.AddGeneratedConversionFunc((*ListOptions)(nil), (*v1.ListOptions)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert__ListOptions_To_v1_ListOptions(a.(*ListOptions), b.(*v1.ListOptions), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*v1.ListOptions)(nil), (*ListOptions)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1_ListOptions_To__ListOptions(a.(*v1.ListOptions), b.(*ListOptions), scope)
	}); err != nil {
		return err
	}
	return nil
}

func autoConvert__ListOptions_To_v1_ListOptions(in *ListOptions, out *v1.ListOptions, s conversion.Scope) error {
	out.TypeMeta = in.TypeMeta
	out.Watch = in.Watch
	out.ResourceVersion = in.ResourceVersion
	return nil
}

// Convert__ListOptions_To_v1_ListOptions is an autogenerated conversion function.
func Convert__ListOptions_To_v1_ListOptions(in *ListOptions, out *v1.ListOptions, s conversion.Scope) error {
	return autoConvert__ListOptions_To_v1_ListOptions(in, out, s)
}

func autoConvert_v1_ListOptions_To__ListOptions(in *v1.ListOptions, out *ListOptions, s conversion.Scope) error {
	out.TypeMeta = in.TypeMeta
	out.Watch = in.Watch
	out.ResourceVersion = in.ResourceVersion
	return nil
}

// Convert_v1_ListOptions_To__ListOptions is an autogenerated conversion function.
func Convert_v1_ListOptions_To__ListOptions(in *v1.ListOptions, out *ListOptions, s conversion.Scope) error {
	return autoConvert_v1_ListOptions_To__ListOptions(in, out, s)
}
