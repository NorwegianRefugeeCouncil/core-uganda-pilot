{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { useTheme } from '@react-navigation/native';\nimport * as React from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport I18nManager from \"react-native-web/dist/exports/I18nManager\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport MaskedView from \"../MaskedView\";\nimport PlatformPressable from \"../PlatformPressable\";\nexport default function HeaderBackButton(_ref) {\n  var disabled = _ref.disabled,\n      allowFontScaling = _ref.allowFontScaling,\n      backImage = _ref.backImage,\n      label = _ref.label,\n      labelStyle = _ref.labelStyle,\n      labelVisible = _ref.labelVisible,\n      onLabelLayout = _ref.onLabelLayout,\n      onPress = _ref.onPress,\n      pressColor = _ref.pressColor,\n      pressOpacity = _ref.pressOpacity,\n      screenLayout = _ref.screenLayout,\n      customTintColor = _ref.tintColor,\n      titleLayout = _ref.titleLayout,\n      _ref$truncatedLabel = _ref.truncatedLabel,\n      truncatedLabel = _ref$truncatedLabel === void 0 ? 'Back' : _ref$truncatedLabel,\n      _ref$accessibilityLab = _ref.accessibilityLabel,\n      accessibilityLabel = _ref$accessibilityLab === void 0 ? label && label !== 'Back' ? label + \", back\" : 'Go back' : _ref$accessibilityLab,\n      testID = _ref.testID,\n      style = _ref.style;\n\n  var _useTheme = useTheme(),\n      colors = _useTheme.colors;\n\n  var _React$useState = React.useState(undefined),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      initialLabelWidth = _React$useState2[0],\n      setInitialLabelWidth = _React$useState2[1];\n\n  var tintColor = customTintColor !== undefined ? customTintColor : Platform.select({\n    ios: colors.primary,\n    default: colors.text\n  });\n\n  var handleLabelLayout = function handleLabelLayout(e) {\n    onLabelLayout === null || onLabelLayout === void 0 ? void 0 : onLabelLayout(e);\n    setInitialLabelWidth(e.nativeEvent.layout.x + e.nativeEvent.layout.width);\n  };\n\n  var shouldTruncateLabel = function shouldTruncateLabel() {\n    return !label || initialLabelWidth && titleLayout && screenLayout && (screenLayout.width - titleLayout.width) / 2 < initialLabelWidth + 26;\n  };\n\n  var renderBackImage = function renderBackImage() {\n    if (backImage) {\n      return backImage({\n        tintColor: tintColor\n      });\n    } else {\n      return React.createElement(Image, {\n        style: [styles.icon, Boolean(labelVisible) && styles.iconWithLabel, Boolean(tintColor) && {\n          tintColor: tintColor\n        }],\n        source: require(\"../assets/back-icon.png\"),\n        fadeDuration: 0\n      });\n    }\n  };\n\n  var renderLabel = function renderLabel() {\n    var leftLabelText = shouldTruncateLabel() ? truncatedLabel : label;\n\n    if (!labelVisible || leftLabelText === undefined) {\n      return null;\n    }\n\n    var labelElement = React.createElement(View, {\n      style: screenLayout ? [styles.labelWrapper, {\n        minWidth: screenLayout.width / 2 - 27\n      }] : null\n    }, React.createElement(Animated.Text, {\n      accessible: false,\n      onLayout: leftLabelText === label ? handleLabelLayout : undefined,\n      style: [styles.label, tintColor ? {\n        color: tintColor\n      } : null, labelStyle],\n      numberOfLines: 1,\n      allowFontScaling: !!allowFontScaling\n    }, leftLabelText));\n\n    if (backImage || Platform.OS !== 'ios') {\n      return labelElement;\n    }\n\n    return React.createElement(MaskedView, {\n      maskElement: React.createElement(View, {\n        style: styles.iconMaskContainer\n      }, React.createElement(Image, {\n        source: require(\"../assets/back-icon-mask.png\"),\n        style: styles.iconMask\n      }), React.createElement(View, {\n        style: styles.iconMaskFillerRect\n      }))\n    }, labelElement);\n  };\n\n  var handlePress = function handlePress() {\n    return onPress && requestAnimationFrame(onPress);\n  };\n\n  return React.createElement(PlatformPressable, {\n    disabled: disabled,\n    accessible: true,\n    accessibilityRole: \"button\",\n    accessibilityLabel: accessibilityLabel,\n    testID: testID,\n    onPress: disabled ? undefined : handlePress,\n    pressColor: pressColor,\n    pressOpacity: pressOpacity,\n    android_ripple: {\n      borderless: true\n    },\n    style: [styles.container, disabled && styles.disabled, style],\n    hitSlop: Platform.select({\n      ios: undefined,\n      default: {\n        top: 16,\n        right: 16,\n        bottom: 16,\n        left: 16\n      }\n    })\n  }, React.createElement(React.Fragment, null, renderBackImage(), renderLabel()));\n}\nvar styles = StyleSheet.create({\n  container: _objectSpread({\n    alignItems: 'center',\n    flexDirection: 'row',\n    minWidth: StyleSheet.hairlineWidth\n  }, Platform.select({\n    ios: null,\n    default: {\n      marginVertical: 3,\n      marginHorizontal: 11\n    }\n  })),\n  disabled: {\n    opacity: 0.5\n  },\n  label: {\n    fontSize: 17,\n    letterSpacing: 0.35\n  },\n  labelWrapper: {\n    flexDirection: 'row',\n    alignItems: 'flex-start'\n  },\n  icon: Platform.select({\n    ios: {\n      height: 21,\n      width: 13,\n      marginLeft: 8,\n      marginRight: 22,\n      marginVertical: 12,\n      resizeMode: 'contain',\n      transform: [{\n        scaleX: I18nManager.isRTL ? -1 : 1\n      }]\n    },\n    default: {\n      height: 24,\n      width: 24,\n      margin: 3,\n      resizeMode: 'contain',\n      transform: [{\n        scaleX: I18nManager.isRTL ? -1 : 1\n      }]\n    }\n  }),\n  iconWithLabel: Platform.OS === 'ios' ? {\n    marginRight: 6\n  } : {},\n  iconMaskContainer: {\n    flex: 1,\n    flexDirection: 'row',\n    justifyContent: 'center'\n  },\n  iconMaskFillerRect: {\n    flex: 1,\n    backgroundColor: '#000'\n  },\n  iconMask: {\n    height: 21,\n    width: 13,\n    marginLeft: -14.5,\n    marginVertical: 12,\n    alignSelf: 'center',\n    resizeMode: 'contain',\n    transform: [{\n      scaleX: I18nManager.isRTL ? -1 : 1\n    }]\n  }\n});","map":{"version":3,"sources":["HeaderBackButton.tsx"],"names":["tintColor","truncatedLabel","accessibilityLabel","label","style","colors","useTheme","React","customTintColor","ios","default","text","handleLabelLayout","e","onLabelLayout","setInitialLabelWidth","shouldTruncateLabel","initialLabelWidth","screenLayout","titleLayout","renderBackImage","backImage","styles","Boolean","require","renderLabel","leftLabelText","labelElement","minWidth","color","allowFontScaling","Platform","iconMaskContainer","iconMask","iconMaskFillerRect","handlePress","onPress","requestAnimationFrame","disabled","borderless","top","right","bottom","left","container","alignItems","flexDirection","StyleSheet","marginVertical","marginHorizontal","opacity","fontSize","letterSpacing","labelWrapper","icon","height","width","marginLeft","marginRight","resizeMode","transform","scaleX","I18nManager","margin","iconWithLabel","flex","justifyContent","backgroundColor","alignSelf"],"mappings":"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","sourcesContent":["import { useTheme } from '@react-navigation/native';\nimport * as React from 'react';\nimport {\n  Animated,\n  I18nManager,\n  Image,\n  LayoutChangeEvent,\n  Platform,\n  StyleSheet,\n  View,\n} from 'react-native';\n\nimport MaskedView from '../MaskedView';\nimport PlatformPressable from '../PlatformPressable';\nimport type { HeaderBackButtonProps } from '../types';\n\nexport default function HeaderBackButton({\n  disabled,\n  allowFontScaling,\n  backImage,\n  label,\n  labelStyle,\n  labelVisible,\n  onLabelLayout,\n  onPress,\n  pressColor,\n  pressOpacity,\n  screenLayout,\n  tintColor: customTintColor,\n  titleLayout,\n  truncatedLabel = 'Back',\n  accessibilityLabel = label && label !== 'Back' ? `${label}, back` : 'Go back',\n  testID,\n  style,\n}: HeaderBackButtonProps) {\n  const { colors } = useTheme();\n\n  const [initialLabelWidth, setInitialLabelWidth] =\n    React.useState<undefined | number>(undefined);\n\n  const tintColor =\n    customTintColor !== undefined\n      ? customTintColor\n      : Platform.select({\n          ios: colors.primary,\n          default: colors.text,\n        });\n\n  const handleLabelLayout = (e: LayoutChangeEvent) => {\n    onLabelLayout?.(e);\n\n    setInitialLabelWidth(e.nativeEvent.layout.x + e.nativeEvent.layout.width);\n  };\n\n  const shouldTruncateLabel = () => {\n    return (\n      !label ||\n      (initialLabelWidth &&\n        titleLayout &&\n        screenLayout &&\n        (screenLayout.width - titleLayout.width) / 2 < initialLabelWidth + 26)\n    );\n  };\n\n  const renderBackImage = () => {\n    if (backImage) {\n      return backImage({ tintColor });\n    } else {\n      return (\n        <Image\n          style={[\n            styles.icon,\n            Boolean(labelVisible) && styles.iconWithLabel,\n            Boolean(tintColor) && { tintColor },\n          ]}\n          source={require('../assets/back-icon.png')}\n          fadeDuration={0}\n        />\n      );\n    }\n  };\n\n  const renderLabel = () => {\n    const leftLabelText = shouldTruncateLabel() ? truncatedLabel : label;\n\n    if (!labelVisible || leftLabelText === undefined) {\n      return null;\n    }\n\n    const labelElement = (\n      <View\n        style={\n          screenLayout\n            ? // We make the button extend till the middle of the screen\n              // Otherwise it appears to cut off when translating\n              [styles.labelWrapper, { minWidth: screenLayout.width / 2 - 27 }]\n            : null\n        }\n      >\n        <Animated.Text\n          accessible={false}\n          onLayout={\n            // This measurement is used to determine if we should truncate the label when it doesn't fit\n            // Only measure it when label is not truncated because we want the measurement of full label\n            leftLabelText === label ? handleLabelLayout : undefined\n          }\n          style={[\n            styles.label,\n            tintColor ? { color: tintColor } : null,\n            labelStyle,\n          ]}\n          numberOfLines={1}\n          allowFontScaling={!!allowFontScaling}\n        >\n          {leftLabelText}\n        </Animated.Text>\n      </View>\n    );\n\n    if (backImage || Platform.OS !== 'ios') {\n      // When a custom backimage is specified, we can't mask the label\n      // Otherwise there might be weird effect due to our mask not being the same as the image\n      return labelElement;\n    }\n\n    return (\n      <MaskedView\n        maskElement={\n          <View style={styles.iconMaskContainer}>\n            <Image\n              source={require('../assets/back-icon-mask.png')}\n              style={styles.iconMask}\n            />\n            <View style={styles.iconMaskFillerRect} />\n          </View>\n        }\n      >\n        {labelElement}\n      </MaskedView>\n    );\n  };\n\n  const handlePress = () => onPress && requestAnimationFrame(onPress);\n\n  return (\n    <PlatformPressable\n      disabled={disabled}\n      accessible\n      accessibilityRole=\"button\"\n      accessibilityLabel={accessibilityLabel}\n      testID={testID}\n      onPress={disabled ? undefined : handlePress}\n      pressColor={pressColor}\n      pressOpacity={pressOpacity}\n      android_ripple={{ borderless: true }}\n      style={[styles.container, disabled && styles.disabled, style]}\n      hitSlop={Platform.select({\n        ios: undefined,\n        default: { top: 16, right: 16, bottom: 16, left: 16 },\n      })}\n    >\n      <React.Fragment>\n        {renderBackImage()}\n        {renderLabel()}\n      </React.Fragment>\n    </PlatformPressable>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    alignItems: 'center',\n    flexDirection: 'row',\n    minWidth: StyleSheet.hairlineWidth, // Avoid collapsing when title is long\n    ...Platform.select({\n      ios: null,\n      default: {\n        marginVertical: 3,\n        marginHorizontal: 11,\n      },\n    }),\n  },\n  disabled: {\n    opacity: 0.5,\n  },\n  label: {\n    fontSize: 17,\n    // Title and back label are a bit different width due to title being bold\n    // Adjusting the letterSpacing makes them coincide better\n    letterSpacing: 0.35,\n  },\n  labelWrapper: {\n    // These styles will make sure that the label doesn't fill the available space\n    // Otherwise it messes with the measurement of the label\n    flexDirection: 'row',\n    alignItems: 'flex-start',\n  },\n  icon: Platform.select({\n    ios: {\n      height: 21,\n      width: 13,\n      marginLeft: 8,\n      marginRight: 22,\n      marginVertical: 12,\n      resizeMode: 'contain',\n      transform: [{ scaleX: I18nManager.isRTL ? -1 : 1 }],\n    },\n    default: {\n      height: 24,\n      width: 24,\n      margin: 3,\n      resizeMode: 'contain',\n      transform: [{ scaleX: I18nManager.isRTL ? -1 : 1 }],\n    },\n  }),\n  iconWithLabel:\n    Platform.OS === 'ios'\n      ? {\n          marginRight: 6,\n        }\n      : {},\n  iconMaskContainer: {\n    flex: 1,\n    flexDirection: 'row',\n    justifyContent: 'center',\n  },\n  iconMaskFillerRect: {\n    flex: 1,\n    backgroundColor: '#000',\n  },\n  iconMask: {\n    height: 21,\n    width: 13,\n    marginLeft: -14.5,\n    marginVertical: 12,\n    alignSelf: 'center',\n    resizeMode: 'contain',\n    transform: [{ scaleX: I18nManager.isRTL ? -1 : 1 }],\n  },\n});\n"]},"metadata":{},"sourceType":"module"}