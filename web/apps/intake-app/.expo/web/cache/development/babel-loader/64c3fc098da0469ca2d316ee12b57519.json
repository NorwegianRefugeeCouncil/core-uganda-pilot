{"ast":null,"code":"import * as React from 'react';\nexport default function useDocumentTitle(ref) {\n  var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n      _ref$enabled = _ref.enabled,\n      enabled = _ref$enabled === void 0 ? true : _ref$enabled,\n      _ref$formatter = _ref.formatter,\n      formatter = _ref$formatter === void 0 ? function (options, route) {\n    var _options$title;\n\n    return (_options$title = options === null || options === void 0 ? void 0 : options.title) !== null && _options$title !== void 0 ? _options$title : route === null || route === void 0 ? void 0 : route.name;\n  } : _ref$formatter;\n\n  React.useEffect(function () {\n    if (!enabled) {\n      return;\n    }\n\n    var navigation = ref.current;\n\n    if (navigation) {\n      var title = formatter(navigation.getCurrentOptions(), navigation.getCurrentRoute());\n      document.title = title;\n    }\n\n    return navigation === null || navigation === void 0 ? void 0 : navigation.addListener('options', function (e) {\n      var title = formatter(e.data.options, navigation === null || navigation === void 0 ? void 0 : navigation.getCurrentRoute());\n      document.title = title;\n    });\n  });\n}","map":{"version":3,"sources":["useDocumentTitle.tsx"],"names":["enabled","formatter","options","route","React","navigation","ref","title","document","e"],"mappings":"AAIA,OAAO,KAAP,KAAA,MAAA,OAAA;AAOA,eAAe,SAAA,gBAAA,CAAA,GAAA,EAMb;AAAA,iFANa,EAMb;AAAA,0BAHEA,OAGF;AAAA,MAHEA,OAGF,6BAJA,IAIA;AAAA,4BAFEC,SAEF;AAAA,MAFEA,SAEF,+BAFc,UAAA,OAAA,EAAA,KAAA,EAAA;AAAA,QAAA,cAAA;;AAAA,WAAA,CAAA,cAAA,GAAoBC,OAApB,KAAA,IAAoBA,IAAAA,OAApB,KAAA,KAAA,CAAoBA,GAApB,KAAA,CAAoBA,GAAAA,OAAO,CAA3B,KAAA,MAAA,IAAA,IAAA,cAAA,KAAA,KAAA,CAAA,GAAA,cAAA,GAAsCC,KAAtC,KAAA,IAAsCA,IAAAA,KAAtC,KAAA,KAAA,CAAsCA,GAAtC,KAAA,CAAsCA,GAAAA,KAAK,CAA3C,IAAA;AAAA,GAEd;;AACAC,EAAAA,KAAK,CAALA,SAAAA,CAAgB,YAAM;AACpB,QAAI,CAAJ,OAAA,EAAc;AACZ;AACD;;AAED,QAAMC,UAAU,GAAGC,GAAG,CAAtB,OAAA;;AAEA,QAAA,UAAA,EAAgB;AACd,UAAMC,KAAK,GAAGN,SAAS,CACrBI,UAAU,CADW,iBACrBA,EADqB,EAErBA,UAAU,CAFZ,eAEEA,EAFqB,CAAvB;AAKAG,MAAAA,QAAQ,CAARA,KAAAA,GAAAA,KAAAA;AACD;;AAED,WAAO,UAAP,KAAA,IAAO,IAAA,UAAP,KAAA,KAAA,CAAO,GAAP,KAAA,CAAO,GAAA,UAAU,CAAV,WAAA,CAAA,SAAA,EAAoCC,UAAAA,CAAD,EAAO;AAC/C,UAAMF,KAAK,GAAGN,SAAS,CAACQ,CAAC,CAADA,IAAAA,CAAD,OAAA,EAAiBJ,UAAjB,KAAA,IAAiBA,IAAAA,UAAjB,KAAA,KAAA,CAAiBA,GAAjB,KAAA,CAAiBA,GAAAA,UAAU,CAAlD,eAAwCA,EAAjB,CAAvB;AAEAG,MAAAA,QAAQ,CAARA,KAAAA,GAAAA,KAAAA;AAHF,KAAO,CAAP;AAhBFJ,GAAAA;AAsBD","sourcesContent":["import type {\n  NavigationContainerRef,\n  ParamListBase,\n} from '@react-navigation/core';\nimport * as React from 'react';\n\nimport type { DocumentTitleOptions } from './types';\n\n/**\n * Set the document title for the active screen\n */\nexport default function useDocumentTitle(\n  ref: React.RefObject<NavigationContainerRef<ParamListBase>>,\n  {\n    enabled = true,\n    formatter = (options, route) => options?.title ?? route?.name,\n  }: DocumentTitleOptions = {}\n) {\n  React.useEffect(() => {\n    if (!enabled) {\n      return;\n    }\n\n    const navigation = ref.current;\n\n    if (navigation) {\n      const title = formatter(\n        navigation.getCurrentOptions(),\n        navigation.getCurrentRoute()\n      );\n\n      document.title = title;\n    }\n\n    return navigation?.addListener('options', (e) => {\n      const title = formatter(e.data.options, navigation?.getCurrentRoute());\n\n      document.title = title;\n    });\n  });\n}\n"]},"metadata":{},"sourceType":"module"}