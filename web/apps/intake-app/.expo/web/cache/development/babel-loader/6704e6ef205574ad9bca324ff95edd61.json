{"ast":null,"code":"var keyset = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\nexport function encodeNoWrap(input) {\n  var output = '';\n  var i = 0;\n\n  do {\n    var chr1 = input.charCodeAt(i++);\n    var chr2 = input.charCodeAt(i++);\n    var chr3 = input.charCodeAt(i++);\n    var enc1 = chr1 >> 2;\n    var enc2 = (chr1 & 3) << 4 | chr2 >> 4;\n    var enc3 = (chr2 & 15) << 2 | chr3 >> 6;\n    var enc4 = chr3 & 63;\n\n    if (isNaN(chr2)) {\n      enc3 = 64;\n      enc4 = 64;\n    } else if (isNaN(chr3)) {\n      enc4 = 64;\n    }\n\n    output = output + keyset.charAt(enc1) + keyset.charAt(enc2) + keyset.charAt(enc3) + keyset.charAt(enc4);\n  } while (i < input.length);\n\n  return output;\n}","map":{"version":3,"sources":["../src/Base64.ts"],"names":[],"mappings":"AAAA,IAAM,MAAM,GAAG,mEAAf;AAEA,OAAM,SAAU,YAAV,CAAuB,KAAvB,EAAoC;AACxC,MAAI,MAAM,GAAG,EAAb;AACA,MAAI,CAAC,GAAG,CAAR;;AAEA,KAAG;AACD,QAAM,IAAI,GAAG,KAAK,CAAC,UAAN,CAAiB,CAAC,EAAlB,CAAb;AACA,QAAM,IAAI,GAAG,KAAK,CAAC,UAAN,CAAiB,CAAC,EAAlB,CAAb;AACA,QAAM,IAAI,GAAG,KAAK,CAAC,UAAN,CAAiB,CAAC,EAAlB,CAAb;AAEA,QAAM,IAAI,GAAG,IAAI,IAAI,CAArB;AACA,QAAM,IAAI,GAAI,CAAC,IAAI,GAAG,CAAR,KAAc,CAAf,GAAqB,IAAI,IAAI,CAA1C;AACA,QAAI,IAAI,GAAI,CAAC,IAAI,GAAG,EAAR,KAAe,CAAhB,GAAsB,IAAI,IAAI,CAAzC;AACA,QAAI,IAAI,GAAG,IAAI,GAAG,EAAlB;;AACA,QAAI,KAAK,CAAC,IAAD,CAAT,EAAiB;AACf,MAAA,IAAI,GAAG,EAAP;AACA,MAAA,IAAI,GAAG,EAAP;AACD,KAHD,MAGO,IAAI,KAAK,CAAC,IAAD,CAAT,EAAiB;AACtB,MAAA,IAAI,GAAG,EAAP;AACD;;AAED,IAAA,MAAM,GACJ,MAAM,GACN,MAAM,CAAC,MAAP,CAAc,IAAd,CADA,GAEA,MAAM,CAAC,MAAP,CAAc,IAAd,CAFA,GAGA,MAAM,CAAC,MAAP,CAAc,IAAd,CAHA,GAIA,MAAM,CAAC,MAAP,CAAc,IAAd,CALF;AAMD,GAtBD,QAsBS,CAAC,GAAG,KAAK,CAAC,MAtBnB;;AAwBA,SAAO,MAAP;AACD","sourcesContent":["const keyset = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\n\nexport function encodeNoWrap(input: string): string {\n  let output = '';\n  let i = 0;\n\n  do {\n    const chr1 = input.charCodeAt(i++);\n    const chr2 = input.charCodeAt(i++);\n    const chr3 = input.charCodeAt(i++);\n\n    const enc1 = chr1 >> 2;\n    const enc2 = ((chr1 & 3) << 4) | (chr2 >> 4);\n    let enc3 = ((chr2 & 15) << 2) | (chr3 >> 6);\n    let enc4 = chr3 & 63;\n    if (isNaN(chr2)) {\n      enc3 = 64;\n      enc4 = 64;\n    } else if (isNaN(chr3)) {\n      enc4 = 64;\n    }\n\n    output =\n      output +\n      keyset.charAt(enc1) +\n      keyset.charAt(enc2) +\n      keyset.charAt(enc3) +\n      keyset.charAt(enc4);\n  } while (i < input.length);\n\n  return output;\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}