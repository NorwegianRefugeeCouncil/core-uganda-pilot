{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport * as React from 'react';\nexport default function useThenable(create) {\n  var _React$useState = React.useState(create),\n      _React$useState2 = _slicedToArray(_React$useState, 1),\n      promise = _React$useState2[0];\n\n  var initialState = [false, undefined];\n  promise.then(function (result) {\n    initialState = [true, result];\n  });\n\n  var _React$useState3 = React.useState(initialState),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      state = _React$useState4[0],\n      setState = _React$useState4[1];\n\n  var _state = _slicedToArray(state, 1),\n      resolved = _state[0];\n\n  React.useEffect(function () {\n    var cancelled = false;\n\n    var resolve = function resolve() {\n      var result;\n      return _regeneratorRuntime.async(function resolve$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(promise);\n\n            case 3:\n              result = _context.sent;\n\n            case 4:\n              _context.prev = 4;\n\n              if (!cancelled) {\n                setState([true, result]);\n              }\n\n              return _context.finish(4);\n\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[0,, 4, 7]], Promise);\n    };\n\n    if (!resolved) {\n      resolve();\n    }\n\n    return function () {\n      cancelled = true;\n    };\n  }, [promise, resolved]);\n  return state;\n}","map":{"version":3,"sources":["useThenable.tsx"],"names":["React","initialState","promise","result","cancelled","resolve","setState"],"mappings":";;AAAA,OAAO,KAAP,KAAA,MAAA,OAAA;AAEA,eAAe,SAAA,WAAA,CAAA,MAAA,EAAsD;AACnE,wBAAkBA,KAAK,CAALA,QAAAA,CAAlB,MAAkBA,CAAlB;AAAA;AAAA,MAAM,OAAN;;AAEA,MAAIC,YAAsC,GAAG,CAAA,KAAA,EAHsB,SAGtB,CAA7C;AAGAC,EAAAA,OAAO,CAAPA,IAAAA,CAAcC,UAAAA,MAAD,EAAY;AACvBF,IAAAA,YAAY,GAAG,CAAA,IAAA,EAAfA,MAAe,CAAfA;AADFC,GAAAA;;AAIA,yBAA0BF,KAAK,CAALA,QAAAA,CAA1B,YAA0BA,CAA1B;AAAA;AAAA,MAAM,KAAN;AAAA,MAAM,QAAN;;AACA,8BAAA,KAAA;AAAA,MAAM,QAAN;;AAEAA,EAAAA,KAAK,CAALA,SAAAA,CAAgB,YAAM;AACpB,QAAII,SAAS,GAAb,KAAA;;AAEA,QAAMC,OAAO,GAAG,SAAVA,OAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CAIZF,OAJY;;AAAA;AAIZA,cAAAA,MAJY;;AAAA;AAAA;;AAMZ,kBAAI,CAAJ,SAAA,EAAgB;AACdG,gBAAAA,QAAQ,CAAC,CAAA,IAAA,EAATA,MAAS,CAAD,CAARA;AACD;;AARW;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAhB;;AAYA,QAAI,CAAJ,QAAA,EAAe;AACbD,MAAAA,OAAO;AACR;;AAED,WAAO,YAAM;AACXD,MAAAA,SAAS,GAATA,IAAAA;AADF,KAAA;AAnBFJ,GAAAA,EAsBG,CAAA,OAAA,EAtBHA,QAsBG,CAtBHA;AAwBA,SAAA,KAAA;AACD","sourcesContent":["import * as React from 'react';\n\nexport default function useThenable<T>(create: () => PromiseLike<T>) {\n  const [promise] = React.useState(create);\n\n  let initialState: [boolean, T | undefined] = [false, undefined];\n\n  // Check if our thenable is synchronous\n  promise.then((result) => {\n    initialState = [true, result];\n  });\n\n  const [state, setState] = React.useState(initialState);\n  const [resolved] = state;\n\n  React.useEffect(() => {\n    let cancelled = false;\n\n    const resolve = async () => {\n      let result;\n\n      try {\n        result = await promise;\n      } finally {\n        if (!cancelled) {\n          setState([true, result]);\n        }\n      }\n    };\n\n    if (!resolved) {\n      resolve();\n    }\n\n    return () => {\n      cancelled = true;\n    };\n  }, [promise, resolved]);\n\n  return state;\n}\n"]},"metadata":{},"sourceType":"module"}