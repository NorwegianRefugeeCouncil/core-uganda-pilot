{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport Platform from \"react-native-web/dist/exports/Platform\";\nvar fontConfig = {\n  web: {\n    regular: {\n      fontFamily: 'Roboto, \"Helvetica Neue\", Helvetica, Arial, sans-serif',\n      fontWeight: '400'\n    },\n    medium: {\n      fontFamily: 'Roboto, \"Helvetica Neue\", Helvetica, Arial, sans-serif',\n      fontWeight: '500'\n    },\n    light: {\n      fontFamily: 'Roboto, \"Helvetica Neue\", Helvetica, Arial, sans-serif',\n      fontWeight: '300'\n    },\n    thin: {\n      fontFamily: 'Roboto, \"Helvetica Neue\", Helvetica, Arial, sans-serif',\n      fontWeight: '100'\n    }\n  },\n  ios: {\n    regular: {\n      fontFamily: 'System',\n      fontWeight: '400'\n    },\n    medium: {\n      fontFamily: 'System',\n      fontWeight: '500'\n    },\n    light: {\n      fontFamily: 'System',\n      fontWeight: '300'\n    },\n    thin: {\n      fontFamily: 'System',\n      fontWeight: '100'\n    }\n  },\n  default: {\n    regular: {\n      fontFamily: 'sans-serif',\n      fontWeight: 'normal'\n    },\n    medium: {\n      fontFamily: 'sans-serif-medium',\n      fontWeight: 'normal'\n    },\n    light: {\n      fontFamily: 'sans-serif-light',\n      fontWeight: 'normal'\n    },\n    thin: {\n      fontFamily: 'sans-serif-thin',\n      fontWeight: 'normal'\n    }\n  }\n};\nexport default function configureFonts(config) {\n  var fonts = Platform.select(_objectSpread(_objectSpread({}, fontConfig), config));\n  return fonts;\n}","map":{"version":3,"sources":["fonts.tsx"],"names":["fontConfig","web","regular","fontFamily","fontWeight","medium","light","thin","ios","default","fonts","config"],"mappings":";;;;;;;AAGA,IAAMA,UAAU,GAAG;AACjBC,EAAAA,GAAG,EAAE;AACHC,IAAAA,OAAO,EAAE;AACPC,MAAAA,UAAU,EADH,wDAAA;AAEPC,MAAAA,UAAU,EAAE;AAFL,KADN;AAKHC,IAAAA,MAAM,EAAE;AACNF,MAAAA,UAAU,EADJ,wDAAA;AAENC,MAAAA,UAAU,EAAE;AAFN,KALL;AASHE,IAAAA,KAAK,EAAE;AACLH,MAAAA,UAAU,EADL,wDAAA;AAELC,MAAAA,UAAU,EAAE;AAFP,KATJ;AAaHG,IAAAA,IAAI,EAAE;AACJJ,MAAAA,UAAU,EADN,wDAAA;AAEJC,MAAAA,UAAU,EAAE;AAFR;AAbH,GADY;AAmBjBI,EAAAA,GAAG,EAAE;AACHN,IAAAA,OAAO,EAAE;AACPC,MAAAA,UAAU,EADH,QAAA;AAEPC,MAAAA,UAAU,EAAE;AAFL,KADN;AAKHC,IAAAA,MAAM,EAAE;AACNF,MAAAA,UAAU,EADJ,QAAA;AAENC,MAAAA,UAAU,EAAE;AAFN,KALL;AASHE,IAAAA,KAAK,EAAE;AACLH,MAAAA,UAAU,EADL,QAAA;AAELC,MAAAA,UAAU,EAAE;AAFP,KATJ;AAaHG,IAAAA,IAAI,EAAE;AACJJ,MAAAA,UAAU,EADN,QAAA;AAEJC,MAAAA,UAAU,EAAE;AAFR;AAbH,GAnBY;AAqCjBK,EAAAA,OAAO,EAAE;AACPP,IAAAA,OAAO,EAAE;AACPC,MAAAA,UAAU,EADH,YAAA;AAEPC,MAAAA,UAAU,EAAE;AAFL,KADF;AAKPC,IAAAA,MAAM,EAAE;AACNF,MAAAA,UAAU,EADJ,mBAAA;AAENC,MAAAA,UAAU,EAAE;AAFN,KALD;AASPE,IAAAA,KAAK,EAAE;AACLH,MAAAA,UAAU,EADL,kBAAA;AAELC,MAAAA,UAAU,EAAE;AAFP,KATA;AAaPG,IAAAA,IAAI,EAAE;AACJJ,MAAAA,UAAU,EADN,iBAAA;AAEJC,MAAAA,UAAU,EAAE;AAFR;AAbC;AArCQ,CAAnB;AAyDA,eAAe,SAAA,cAAA,CAAA,MAAA,EAEN;AACP,MAAMM,KAAK,GAAG,QAAQ,CAAR,MAAA,iCAAgB,UAAhB,GAAoCC,MAApC,EAAd;AACA,SAAA,KAAA;AACD","sourcesContent":["import { Platform, PlatformOSType } from 'react-native';\nimport type { Fonts } from '../types';\n\nconst fontConfig = {\n  web: {\n    regular: {\n      fontFamily: 'Roboto, \"Helvetica Neue\", Helvetica, Arial, sans-serif',\n      fontWeight: '400' as '400',\n    },\n    medium: {\n      fontFamily: 'Roboto, \"Helvetica Neue\", Helvetica, Arial, sans-serif',\n      fontWeight: '500' as '500',\n    },\n    light: {\n      fontFamily: 'Roboto, \"Helvetica Neue\", Helvetica, Arial, sans-serif',\n      fontWeight: '300' as '300',\n    },\n    thin: {\n      fontFamily: 'Roboto, \"Helvetica Neue\", Helvetica, Arial, sans-serif',\n      fontWeight: '100' as '100',\n    },\n  },\n  ios: {\n    regular: {\n      fontFamily: 'System',\n      fontWeight: '400' as '400',\n    },\n    medium: {\n      fontFamily: 'System',\n      fontWeight: '500' as '500',\n    },\n    light: {\n      fontFamily: 'System',\n      fontWeight: '300' as '300',\n    },\n    thin: {\n      fontFamily: 'System',\n      fontWeight: '100' as '100',\n    },\n  },\n  default: {\n    regular: {\n      fontFamily: 'sans-serif',\n      fontWeight: 'normal' as 'normal',\n    },\n    medium: {\n      fontFamily: 'sans-serif-medium',\n      fontWeight: 'normal' as 'normal',\n    },\n    light: {\n      fontFamily: 'sans-serif-light',\n      fontWeight: 'normal' as 'normal',\n    },\n    thin: {\n      fontFamily: 'sans-serif-thin',\n      fontWeight: 'normal' as 'normal',\n    },\n  },\n};\n\nexport default function configureFonts(\n  config?: { [platform in PlatformOSType | 'default']?: Fonts }\n): Fonts {\n  const fonts = Platform.select({ ...fontConfig, ...config }) as Fonts;\n  return fonts;\n}\n"]},"metadata":{},"sourceType":"module"}