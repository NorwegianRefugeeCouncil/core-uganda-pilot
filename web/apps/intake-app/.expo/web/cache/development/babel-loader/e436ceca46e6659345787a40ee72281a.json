{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React from 'react';\nimport { Title } from 'react-native-paper';\nimport { layout } from \"../../styles\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport useApiClient from \"../../utils/clients\";\nimport routes from \"../../constants/routes\";\n\nvar FormsScreen = function FormsScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _React$useState = React.useState(),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      forms = _React$useState2[0],\n      setForms = _React$useState2[1];\n\n  var _React$useState3 = React.useState(true),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      isLoading = _React$useState4[0],\n      setIsLoading = _React$useState4[1];\n\n  var client = useApiClient();\n  React.useEffect(function () {\n    client.listForms({}).then(function (data) {\n      var _data$response;\n\n      setForms((_data$response = data.response) == null ? void 0 : _data$response.items);\n      setIsLoading(false);\n    });\n  }, [client]);\n  return React.createElement(View, {\n    style: layout.body\n  }, React.createElement(Title, null, routes.forms.title), !isLoading && React.createElement(FlatList, {\n    style: {\n      flex: 1,\n      width: '100%'\n    },\n    data: forms,\n    renderItem: function renderItem(_ref2) {\n      var item = _ref2.item,\n          index = _ref2.index,\n          separators = _ref2.separators;\n      return React.createElement(TouchableOpacity, {\n        key: index,\n        onPress: function onPress() {\n          return navigation.navigate(routes.records.name, {\n            formId: item.id,\n            databaseId: item.databaseId\n          });\n        }\n      }, React.createElement(View, {\n        style: {\n          flexDirection: 'row',\n          flex: 1\n        }\n      }, React.createElement(View, {\n        style: {\n          justifyContent: 'center',\n          paddingRight: 12\n        }\n      }, React.createElement(Text, null, item.code)), React.createElement(View, {\n        style: {\n          justifyContent: 'center'\n        }\n      }, React.createElement(Text, null, item.name))));\n    }\n  }));\n};\n\nexport default FormsScreen;","map":{"version":3,"sources":["/home/nilueps/GolandProjects/core/web/apps/intake-app/src/components/screens/FormsScreen.tsx"],"names":["React","Title","layout","useApiClient","routes","FormsScreen","navigation","useState","forms","setForms","isLoading","setIsLoading","client","useEffect","listForms","then","data","response","items","body","title","flex","width","item","index","separators","navigate","records","name","formId","id","databaseId","flexDirection","justifyContent","paddingRight","code"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,KAAR,QAAoB,oBAApB;AACA,SAAQC,MAAR;;;;;AAEA,OAAOC,YAAP;AACA,OAAOC,MAAP;;AAGA,IAAMC,WAA0B,GAAG,SAA7BA,WAA6B,OAAkB;AAAA,MAAhBC,UAAgB,QAAhBA,UAAgB;;AACjD,wBAA0BN,KAAK,CAACO,QAAN,EAA1B;AAAA;AAAA,MAAOC,KAAP;AAAA,MAAcC,QAAd;;AACA,yBAAkCT,KAAK,CAACO,QAAN,CAAe,IAAf,CAAlC;AAAA;AAAA,MAAOG,SAAP;AAAA,MAAkBC,YAAlB;;AACA,MAAMC,MAAM,GAAGT,YAAY,EAA3B;AAEAH,EAAAA,KAAK,CAACa,SAAN,CAAgB,YAAM;AAClBD,IAAAA,MAAM,CAACE,SAAP,CAAiB,EAAjB,EACKC,IADL,CACU,UAACC,IAAD,EAAU;AAAA;;AACZP,MAAAA,QAAQ,mBAACO,IAAI,CAACC,QAAN,qBAAC,eAAeC,KAAhB,CAAR;AACAP,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACH,KAJL;AAKH,GAND,EAMG,CAACC,MAAD,CANH;AAQA,SACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEV,MAAM,CAACiB;AAApB,KACI,oBAAC,KAAD,QAAQf,MAAM,CAACI,KAAP,CAAaY,KAArB,CADJ,EAEK,CAACV,SAAD,IACG,oBAAC,QAAD;AACI,IAAA,KAAK,EAAE;AAACW,MAAAA,IAAI,EAAE,CAAP;AAAUC,MAAAA,KAAK,EAAE;AAAjB,KADX;AAEI,IAAA,IAAI,EAAEd,KAFV;AAGI,IAAA,UAAU,EAAE;AAAA,UAAEe,IAAF,SAAEA,IAAF;AAAA,UAAQC,KAAR,SAAQA,KAAR;AAAA,UAAeC,UAAf,SAAeA,UAAf;AAAA,aACR,oBAAC,gBAAD;AACI,QAAA,GAAG,EAAED,KADT;AAEI,QAAA,OAAO,EAAE;AAAA,iBAAMlB,UAAU,CAACoB,QAAX,CAAoBtB,MAAM,CAACuB,OAAP,CAAeC,IAAnC,EAAyC;AACpDC,YAAAA,MAAM,EAAEN,IAAI,CAACO,EADuC;AAEpDC,YAAAA,UAAU,EAAER,IAAI,CAACQ;AAFmC,WAAzC,CAAN;AAAA;AAFb,SAOI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAACC,UAAAA,aAAa,EAAE,KAAhB;AAAuBX,UAAAA,IAAI,EAAE;AAA7B;AAAb,SACI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAACY,UAAAA,cAAc,EAAE,QAAjB;AAA2BC,UAAAA,YAAY,EAAE;AAAzC;AAAb,SACI,oBAAC,IAAD,QAAOX,IAAI,CAACY,IAAZ,CADJ,CADJ,EAII,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAACF,UAAAA,cAAc,EAAE;AAAjB;AAAb,SACI,oBAAC,IAAD,QAAOV,IAAI,CAACK,IAAZ,CADJ,CAJJ,CAPJ,CADQ;AAAA;AAHhB,IAHR,CADJ;AA6BH,CA1CD;;AA4CA,eAAevB,WAAf","sourcesContent":["import React from 'react';\nimport {Title} from 'react-native-paper';\nimport {layout} from '../../styles';\nimport {FlatList, Text, TouchableOpacity, View} from 'react-native';\nimport useApiClient from \"../../utils/clients\";\nimport routes from \"../../constants/routes\";\nimport {FormDefinition} from \"@core/api-client\";\n\nconst FormsScreen: React.FC<any> = ({navigation}) => {\n    const [forms, setForms] = React.useState<FormDefinition[]>();\n    const [isLoading, setIsLoading] = React.useState(true);\n    const client = useApiClient();\n\n    React.useEffect(() => {\n        client.listForms({})\n            .then((data) => {\n                setForms(data.response?.items)\n                setIsLoading(false)\n            })\n    }, [client]);\n\n    return (\n        <View style={layout.body}>\n            <Title>{routes.forms.title}</Title>\n            {!isLoading && (\n                <FlatList\n                    style={{flex: 1, width: '100%'}}\n                    data={forms}\n                    renderItem={({item, index, separators}) => (\n                        <TouchableOpacity\n                            key={index}\n                            onPress={() => navigation.navigate(routes.records.name, {\n                                formId: item.id,\n                                databaseId: item.databaseId\n                            })}\n                        >\n                            <View style={{flexDirection: 'row', flex: 1}}>\n                                <View style={{justifyContent: 'center', paddingRight: 12}}>\n                                    <Text>{item.code}</Text>\n                                </View>\n                                <View style={{justifyContent: 'center'}}>\n                                    <Text>{item.name}</Text>\n                                </View>\n                            </View>\n                        </TouchableOpacity>\n                    )}\n                />\n            )}\n        </View>\n    );\n};\n\nexport default FormsScreen;\n"]},"metadata":{},"sourceType":"module"}