{"ast":null,"code":"import * as React from 'react';\nimport NavigationRouteContext from \"./NavigationRouteContext\";\nexport default function useRoute() {\n  var route = React.useContext(NavigationRouteContext);\n\n  if (route === undefined) {\n    throw new Error(\"Couldn't find a route object. Is your component inside a screen in a navigator?\");\n  }\n\n  return route;\n}","map":{"version":3,"sources":["useRoute.tsx"],"names":["route","React"],"mappings":"AACA,OAAO,KAAP,KAAA,MAAA,OAAA;AAEA,OAAA,sBAAA;AAQA,eAAe,SAAA,QAAA,GAA2D;AACxE,MAAMA,KAAK,GAAGC,KAAK,CAALA,UAAAA,CAAd,sBAAcA,CAAd;;AAEA,MAAID,KAAK,KAAT,SAAA,EAAyB;AACvB,UAAM,IAAA,KAAA,CAAN,iFAAM,CAAN;AAGD;;AAED,SAAA,KAAA;AACD","sourcesContent":["import type { ParamListBase } from '@react-navigation/routers';\nimport * as React from 'react';\n\nimport NavigationRouteContext from './NavigationRouteContext';\nimport type { RouteProp } from './types';\n\n/**\n * Hook to access the route prop of the parent screen anywhere.\n *\n * @returns Route prop of the parent screen.\n */\nexport default function useRoute<T extends RouteProp<ParamListBase>>(): T {\n  const route = React.useContext(NavigationRouteContext);\n\n  if (route === undefined) {\n    throw new Error(\n      \"Couldn't find a route object. Is your component inside a screen in a navigator?\"\n    );\n  }\n\n  return route as T;\n}\n"]},"metadata":{},"sourceType":"module"}