{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport { getHeaderTitle, HeaderShownContext } from '@react-navigation/elements';\nimport { StackActions } from '@react-navigation/native';\nimport * as React from 'react';\nimport { useSafeAreaInsets } from 'react-native-safe-area-context';\nimport debounce from \"../../utils/debounce\";\nimport ModalPresentationContext from \"../../utils/ModalPresentationContext\";\nimport HeaderSegment from \"./HeaderSegment\";\nexport default React.memo(function Header(_ref) {\n  var back = _ref.back,\n      layout = _ref.layout,\n      progress = _ref.progress,\n      options = _ref.options,\n      route = _ref.route,\n      navigation = _ref.navigation,\n      styleInterpolator = _ref.styleInterpolator;\n  var insets = useSafeAreaInsets();\n  var previousTitle;\n\n  if (options.headerBackTitle !== undefined) {\n    previousTitle = options.headerBackTitle;\n  } else if (back) {\n    previousTitle = back.title;\n  }\n\n  var goBack = React.useCallback(debounce(function () {\n    if (navigation.isFocused() && navigation.canGoBack()) {\n      navigation.dispatch(_objectSpread(_objectSpread({}, StackActions.pop()), {}, {\n        source: route.key\n      }));\n    }\n  }, 50), [navigation, route.key]);\n  var isModal = React.useContext(ModalPresentationContext);\n  var isParentHeaderShown = React.useContext(HeaderShownContext);\n  var statusBarHeight = options.headerStatusBarHeight !== undefined ? options.headerStatusBarHeight : isModal || isParentHeaderShown ? 0 : insets.top;\n  return React.createElement(HeaderSegment, _extends({}, options, {\n    title: getHeaderTitle(options, route.name),\n    progress: progress,\n    layout: layout,\n    modal: isModal,\n    headerBackTitle: options.headerBackTitle !== undefined ? options.headerBackTitle : previousTitle,\n    headerStatusBarHeight: statusBarHeight,\n    onGoBack: back ? goBack : undefined,\n    styleInterpolator: styleInterpolator\n  }));\n});","map":{"version":3,"sources":["Header.tsx"],"names":["styleInterpolator","insets","useSafeAreaInsets","options","previousTitle","back","goBack","debounce","navigation","StackActions","source","route","key","isModal","React","isParentHeaderShown","statusBarHeight","getHeaderTitle"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAA,SAAA,cAAA,EAAA,kBAAA,QAAA,4BAAA;AACA,SAAA,YAAA,QAAA,0BAAA;AACA,OAAO,KAAP,KAAA,MAAA,OAAA;AACA,SAAA,iBAAA,QAAA,gCAAA;AAGA,OAAA,QAAA;AACA,OAAA,wBAAA;AACA,OAAA,aAAA;AAEA,eAAe,KAAK,CAAL,IAAA,CAAW,SAAA,MAAA,OAQL;AAAA,MARqB,IAQrB,QARqB,IAQrB;AAAA,MARqB,MAQrB,QARqB,MAQrB;AAAA,MARqB,QAQrB,QARqB,QAQrB;AAAA,MARqB,OAQrB,QARqB,OAQrB;AAAA,MARqB,KAQrB,QARqB,KAQrB;AAAA,MARqB,UAQrB,QARqB,UAQrB;AAAA,MADnBA,iBACmB,QADnBA,iBACmB;AACnB,MAAMC,MAAM,GAAGC,iBAAf,EAAA;AAEA,MAHmB,aAGnB;;AAIA,MAAIC,OAAO,CAAPA,eAAAA,KAAJ,SAAA,EAA2C;AACzCC,IAAAA,aAAa,GAAGD,OAAO,CAAvBC,eAAAA;AADF,GAAA,MAEO,IAAA,IAAA,EAAU;AACfA,IAAAA,aAAa,GAAGC,IAAI,CAApBD,KAAAA;AAViB;;AAcnB,MAAME,MAAM,GAAG,KAAK,CAAL,WAAA,CACbC,QAAQ,CAAC,YAAM;AACb,QAAIC,UAAU,CAAVA,SAAAA,MAA0BA,UAAU,CAAxC,SAA8BA,EAA9B,EAAsD;AACpDA,MAAAA,UAAU,CAAVA,QAAAA,iCACKC,YAAY,CADG,GACfA,EADLD;AAEEE,QAAAA,MAAM,EAAEC,KAAK,CAACC;AAFhBJ;AAID;AANK,GAAA,EADK,EACL,CADK,EASb,CAAA,UAAA,EAAaG,KAAK,CATpB,GASE,CATa,CAAf;AAYA,MAAME,OAAO,GAAGC,KAAK,CAALA,UAAAA,CAAhB,wBAAgBA,CAAhB;AACA,MAAMC,mBAAmB,GAAGD,KAAK,CAALA,UAAAA,CAA5B,kBAA4BA,CAA5B;AAEA,MAAME,eAAe,GACnBb,OAAO,CAAPA,qBAAAA,KAAAA,SAAAA,GACIA,OAAO,CADXA,qBAAAA,GAEIU,OAAO,IAAPA,mBAAAA,GAAAA,CAAAA,GAEAZ,MAAM,CALZ,GAAA;AAOA,SACE,KAAA,CAAA,aAAA,CAAA,aAAA,EAAA,QAAA,CAAA,EAAA,EAAA,OAAA,EAAA;AAEE,IAAA,KAAK,EAAEgB,cAAc,CAAA,OAAA,EAAUN,KAAK,CAFtC,IAEuB,CAFvB;AAGE,IAAA,QAAQ,EAHV,QAAA;AAIE,IAAA,MAAM,EAJR,MAAA;AAKE,IAAA,KAAK,EALP,OAAA;AAME,IAAA,eAAe,EACbR,OAAO,CAAPA,eAAAA,KAAAA,SAAAA,GACIA,OAAO,CADXA,eAAAA,GAPJ,aAAA;AAWE,IAAA,qBAAqB,EAXvB,eAAA;AAYE,IAAA,QAAQ,EAAEE,IAAI,GAAA,MAAA,GAZhB,SAAA;AAaE,IAAA,iBAAiB,EAAEL;AAbrB,GAAA,CAAA,CADF;AA5CF,CAAe,CAAf","sourcesContent":["import { getHeaderTitle, HeaderShownContext } from '@react-navigation/elements';\nimport { StackActions } from '@react-navigation/native';\nimport * as React from 'react';\nimport { useSafeAreaInsets } from 'react-native-safe-area-context';\n\nimport type { StackHeaderProps } from '../../types';\nimport debounce from '../../utils/debounce';\nimport ModalPresentationContext from '../../utils/ModalPresentationContext';\nimport HeaderSegment from './HeaderSegment';\n\nexport default React.memo(function Header({\n  back,\n  layout,\n  progress,\n  options,\n  route,\n  navigation,\n  styleInterpolator,\n}: StackHeaderProps) {\n  const insets = useSafeAreaInsets();\n\n  let previousTitle;\n\n  // The label for the left back button shows the title of the previous screen\n  // If a custom label is specified, we use it, otherwise use previous screen's title\n  if (options.headerBackTitle !== undefined) {\n    previousTitle = options.headerBackTitle;\n  } else if (back) {\n    previousTitle = back.title;\n  }\n\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  const goBack = React.useCallback(\n    debounce(() => {\n      if (navigation.isFocused() && navigation.canGoBack()) {\n        navigation.dispatch({\n          ...StackActions.pop(),\n          source: route.key,\n        });\n      }\n    }, 50),\n    [navigation, route.key]\n  );\n\n  const isModal = React.useContext(ModalPresentationContext);\n  const isParentHeaderShown = React.useContext(HeaderShownContext);\n\n  const statusBarHeight =\n    options.headerStatusBarHeight !== undefined\n      ? options.headerStatusBarHeight\n      : isModal || isParentHeaderShown\n      ? 0\n      : insets.top;\n\n  return (\n    <HeaderSegment\n      {...options}\n      title={getHeaderTitle(options, route.name)}\n      progress={progress}\n      layout={layout}\n      modal={isModal}\n      headerBackTitle={\n        options.headerBackTitle !== undefined\n          ? options.headerBackTitle\n          : previousTitle\n      }\n      headerStatusBarHeight={statusBarHeight}\n      onGoBack={back ? goBack : undefined}\n      styleInterpolator={styleInterpolator}\n    />\n  );\n});\n"]},"metadata":{},"sourceType":"module"}