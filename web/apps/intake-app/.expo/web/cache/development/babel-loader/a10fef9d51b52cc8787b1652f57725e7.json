{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React from 'react';\nimport { Appbar } from 'react-native-paper';\nimport pngSearch from \"../../assets/png/search_white.png\";\nimport pngFilter from \"../../assets/png/symbol_filter.png\";\nimport pngIndividuals from \"../../assets/png/symbol_individuals.png\";\nimport { common } from \"../styles\";\nimport routes from \"../constants/routes\";\nimport NavigationDropdown from \"./NavigationDropdown\";\n\nvar NavigationBar = function NavigationBar(_ref) {\n  var navigation = _ref.navigation,\n      back = _ref.back,\n      options = _ref.options;\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      visible = _React$useState2[0],\n      setVisible = _React$useState2[1];\n\n  var openMenu = function openMenu() {\n    return setVisible(true);\n  };\n\n  var closeMenu = function closeMenu() {\n    return setVisible(false);\n  };\n\n  return React.createElement(Appbar.Header, null, back ? React.createElement(Appbar.BackAction, {\n    onPress: navigation.goBack\n  }) : null, React.createElement(Appbar.Action, {\n    icon: pngIndividuals,\n    accessibilityLabel: routes.addRecord.title,\n    onPress: function onPress() {\n      return navigation.navigate(routes.addRecord.name);\n    }\n  }), React.createElement(Appbar.Action, {\n    icon: pngSearch\n  }), React.createElement(Appbar.Content, {\n    title: options.title,\n    titleStyle: common.textCentered,\n    onPress: function onPress() {\n      return navigation.navigate(routes.forms.name);\n    }\n  }), React.createElement(Appbar.Action, {\n    icon: pngFilter\n  }), React.createElement(NavigationDropdown, {\n    visible: visible,\n    closeMenu: closeMenu,\n    openMenu: openMenu,\n    navigation: navigation\n  }));\n};\n\nexport default NavigationBar;","map":{"version":3,"sources":["/home/nilueps/GolandProjects/core/web/apps/intake-app/src/components/NavigationBar.tsx"],"names":["React","Appbar","pngSearch","pngFilter","pngIndividuals","common","routes","NavigationDropdown","NavigationBar","navigation","back","options","useState","visible","setVisible","openMenu","closeMenu","goBack","addRecord","title","navigate","name","textCentered","forms"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,QAAuB,oBAAvB;AACA,OAAOC,SAAP;AACA,OAAOC,SAAP;AACA,OAAOC,cAAP;AACA,SAASC,MAAT;AAEA,OAAOC,MAAP;AACA,OAAOC,kBAAP;;AAIA,IAAMC,aAAwC,GAAG,SAA3CA,aAA2C,OAKzC;AAAA,MAHJC,UAGI,QAHJA,UAGI;AAAA,MAFJC,IAEI,QAFJA,IAEI;AAAA,MADJC,OACI,QADJA,OACI;;AAEN,wBAA8BX,KAAK,CAACY,QAAN,CAAe,KAAf,CAA9B;AAAA;AAAA,MAAOC,OAAP;AAAA,MAAgBC,UAAhB;;AACA,MAAMC,QAAQ,GAAG,SAAXA,QAAW;AAAA,WAAMD,UAAU,CAAC,IAAD,CAAhB;AAAA,GAAjB;;AACA,MAAME,SAAS,GAAG,SAAZA,SAAY;AAAA,WAAMF,UAAU,CAAC,KAAD,CAAhB;AAAA,GAAlB;;AAEA,SACE,oBAAC,MAAD,CAAQ,MAAR,QACGJ,IAAI,GAAG,oBAAC,MAAD,CAAQ,UAAR;AAAmB,IAAA,OAAO,EAAED,UAAU,CAACQ;AAAvC,IAAH,GAAuD,IAD9D,EAEE,oBAAC,MAAD,CAAQ,MAAR;AACE,IAAA,IAAI,EAAEb,cADR;AAEE,IAAA,kBAAkB,EAAEE,MAAM,CAACY,SAAP,CAAiBC,KAFvC;AAGE,IAAA,OAAO,EAAE;AAAA,aAAMV,UAAU,CAACW,QAAX,CAAoBd,MAAM,CAACY,SAAP,CAAiBG,IAArC,CAAN;AAAA;AAHX,IAFF,EAOE,oBAAC,MAAD,CAAQ,MAAR;AACE,IAAA,IAAI,EAAEnB;AADR,IAPF,EAUE,oBAAC,MAAD,CAAQ,OAAR;AACE,IAAA,KAAK,EAAES,OAAO,CAACQ,KADjB;AAEE,IAAA,UAAU,EAAEd,MAAM,CAACiB,YAFrB;AAGE,IAAA,OAAO,EAAE;AAAA,aAAMb,UAAU,CAACW,QAAX,CAAoBd,MAAM,CAACiB,KAAP,CAAaF,IAAjC,CAAN;AAAA;AAHX,IAVF,EAeE,oBAAC,MAAD,CAAQ,MAAR;AACE,IAAA,IAAI,EAAElB;AADR,IAfF,EAkBE,oBAAC,kBAAD;AACE,IAAA,OAAO,EAAEU,OADX;AAEE,IAAA,SAAS,EAAEG,SAFb;AAGE,IAAA,QAAQ,EAAED,QAHZ;AAIE,IAAA,UAAU,EAAEN;AAJd,IAlBF,CADF;AA2BD,CAtCD;;AAwCA,eAAeD,aAAf","sourcesContent":["import React from 'react';\nimport { Appbar } from 'react-native-paper';\nimport pngSearch from '../../assets/png/search_white.png';\nimport pngFilter from '../../assets/png/symbol_filter.png';\nimport pngIndividuals from '../../assets/png/symbol_individuals.png';\nimport { common } from '../styles';\nimport { StackHeaderProps } from '@react-navigation/stack';\nimport routes from '../constants/routes';\nimport NavigationDropdown from './NavigationDropdown';\n\ntype NavigationProps = StackHeaderProps;\n\nconst NavigationBar: React.FC<NavigationProps> = (\n  {\n    navigation,\n    back,\n    options,\n  }) => {\n\n  const [visible, setVisible] = React.useState(false);\n  const openMenu = () => setVisible(true);\n  const closeMenu = () => setVisible(false);\n\n  return (\n    <Appbar.Header>\n      {back ? <Appbar.BackAction onPress={navigation.goBack} /> : null}\n      <Appbar.Action\n        icon={pngIndividuals}\n        accessibilityLabel={routes.addRecord.title}\n        onPress={() => navigation.navigate(routes.addRecord.name)}\n      />\n      <Appbar.Action\n        icon={pngSearch}\n      />\n      <Appbar.Content\n        title={options.title}\n        titleStyle={common.textCentered}\n        onPress={() => navigation.navigate(routes.forms.name)}\n      />\n      <Appbar.Action\n        icon={pngFilter}\n      />\n      <NavigationDropdown\n        visible={visible}\n        closeMenu={closeMenu}\n        openMenu={openMenu}\n        navigation={navigation}\n      />\n    </Appbar.Header>\n  );\n};\n\nexport default NavigationBar;\n"]},"metadata":{},"sourceType":"module"}