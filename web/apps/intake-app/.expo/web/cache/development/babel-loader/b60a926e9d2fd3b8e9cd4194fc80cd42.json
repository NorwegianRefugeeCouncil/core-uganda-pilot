{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport View from \"react-native-web/dist/exports/View\";\nimport color from 'color';\nimport FAB from \"./FAB\";\nimport Text from \"../Typography/Text\";\nimport Card from \"../Card/Card\";\nimport { withTheme } from \"../../core/theming\";\n\nvar FABGroup = function FABGroup(_ref) {\n  var actions = _ref.actions,\n      icon = _ref.icon,\n      open = _ref.open,\n      _onPress = _ref.onPress,\n      accessibilityLabel = _ref.accessibilityLabel,\n      theme = _ref.theme,\n      style = _ref.style,\n      fabStyle = _ref.fabStyle,\n      visible = _ref.visible,\n      testID = _ref.testID,\n      onStateChange = _ref.onStateChange,\n      colorProp = _ref.color;\n\n  var _React$useRef = React.useRef(new Animated.Value(0)),\n      backdrop = _React$useRef.current;\n\n  var animations = React.useRef(actions.map(function () {\n    return new Animated.Value(open ? 1 : 0);\n  }));\n\n  var _React$useState = React.useState(null),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      prevActions = _React$useState2[0],\n      setPrevActions = _React$useState2[1];\n\n  var scale = theme.animation.scale;\n  React.useEffect(function () {\n    if (open) {\n      Animated.parallel([Animated.timing(backdrop, {\n        toValue: 1,\n        duration: 250 * scale,\n        useNativeDriver: true\n      }), Animated.stagger(50 * scale, animations.current.map(function (animation) {\n        return Animated.timing(animation, {\n          toValue: 1,\n          duration: 150 * scale,\n          useNativeDriver: true\n        });\n      }).reverse())]).start();\n    } else {\n      Animated.parallel([Animated.timing(backdrop, {\n        toValue: 0,\n        duration: 200 * scale,\n        useNativeDriver: true\n      })].concat(_toConsumableArray(animations.current.map(function (animation) {\n        return Animated.timing(animation, {\n          toValue: 0,\n          duration: 150 * scale,\n          useNativeDriver: true\n        });\n      })))).start();\n    }\n  }, [open, actions, backdrop, scale]);\n\n  var close = function close() {\n    return onStateChange({\n      open: false\n    });\n  };\n\n  var toggle = function toggle() {\n    return onStateChange({\n      open: !open\n    });\n  };\n\n  var colors = theme.colors;\n  var labelColor = theme.dark ? colors.text : color(colors.text).fade(0.54).rgb().string();\n  var backdropOpacity = open ? backdrop.interpolate({\n    inputRange: [0, 0.5, 1],\n    outputRange: [0, 1, 1]\n  }) : backdrop;\n  var opacities = animations.current;\n  var scales = opacities.map(function (opacity) {\n    return open ? opacity.interpolate({\n      inputRange: [0, 1],\n      outputRange: [0.8, 1]\n    }) : 1;\n  });\n\n  if (actions.length !== (prevActions === null || prevActions === void 0 ? void 0 : prevActions.length)) {\n    animations.current = actions.map(function (_, i) {\n      return animations.current[i] || new Animated.Value(open ? 1 : 0);\n    });\n    setPrevActions(actions);\n  }\n\n  return React.createElement(View, {\n    pointerEvents: \"box-none\",\n    style: [styles.container, style]\n  }, React.createElement(TouchableWithoutFeedback, {\n    onPress: close\n  }, React.createElement(Animated.View, {\n    pointerEvents: open ? 'auto' : 'none',\n    style: [styles.backdrop, {\n      opacity: backdropOpacity,\n      backgroundColor: colors.backdrop\n    }]\n  })), React.createElement(SafeAreaView, {\n    pointerEvents: \"box-none\",\n    style: styles.safeArea\n  }, React.createElement(View, {\n    pointerEvents: open ? 'box-none' : 'none'\n  }, actions.map(function (it, i) {\n    return React.createElement(View, {\n      key: i,\n      style: [styles.item, {\n        marginHorizontal: typeof it.small === 'undefined' || it.small ? 24 : 16\n      }],\n      pointerEvents: open ? 'box-none' : 'none'\n    }, it.label && React.createElement(View, null, React.createElement(Card, {\n      style: [styles.label, {\n        transform: [{\n          scale: scales[i]\n        }],\n        opacity: opacities[i]\n      }],\n      onPress: function onPress() {\n        it.onPress();\n        close();\n      },\n      accessibilityLabel: it.accessibilityLabel !== 'undefined' ? it.accessibilityLabel : it.label,\n      accessibilityTraits: \"button\",\n      accessibilityComponentType: \"button\",\n      accessibilityRole: \"button\"\n    }, React.createElement(Text, {\n      style: {\n        color: labelColor\n      }\n    }, it.label))), React.createElement(FAB, {\n      small: typeof it.small !== 'undefined' ? it.small : true,\n      icon: it.icon,\n      color: it.color,\n      style: [{\n        transform: [{\n          scale: scales[i]\n        }],\n        opacity: opacities[i],\n        backgroundColor: theme.colors.surface\n      }, it.style],\n      onPress: function onPress() {\n        it.onPress();\n        close();\n      },\n      accessibilityLabel: typeof it.accessibilityLabel !== 'undefined' ? it.accessibilityLabel : it.label,\n      accessibilityTraits: \"button\",\n      accessibilityComponentType: \"button\",\n      accessibilityRole: \"button\",\n      testID: it.testID,\n      visible: open\n    }));\n  })), React.createElement(FAB, {\n    onPress: function onPress() {\n      _onPress === null || _onPress === void 0 ? void 0 : _onPress();\n      toggle();\n    },\n    icon: icon,\n    color: colorProp,\n    accessibilityLabel: accessibilityLabel,\n    accessibilityTraits: \"button\",\n    accessibilityComponentType: \"button\",\n    accessibilityRole: \"button\",\n    accessibilityState: {\n      expanded: open\n    },\n    style: [styles.fab, fabStyle],\n    visible: visible,\n    testID: testID\n  })));\n};\n\nFABGroup.displayName = 'FAB.Group';\nexport default withTheme(FABGroup);\nvar FABGroupWithTheme = withTheme(FABGroup);\nexport { FABGroupWithTheme as FABGroup };\nvar styles = StyleSheet.create({\n  safeArea: {\n    alignItems: 'flex-end'\n  },\n  container: _objectSpread(_objectSpread({}, StyleSheet.absoluteFillObject), {}, {\n    justifyContent: 'flex-end'\n  }),\n  fab: {\n    marginHorizontal: 16,\n    marginBottom: 16,\n    marginTop: 0\n  },\n  backdrop: _objectSpread({}, StyleSheet.absoluteFillObject),\n  label: {\n    borderRadius: 5,\n    paddingHorizontal: 12,\n    paddingVertical: 6,\n    marginVertical: 8,\n    marginHorizontal: 16,\n    elevation: 2\n  },\n  item: {\n    marginBottom: 16,\n    flexDirection: 'row',\n    justifyContent: 'flex-end',\n    alignItems: 'center'\n  }\n});","map":{"version":3,"sources":["FABGroup.tsx"],"names":["FABGroup","color","colorProp","current","backdrop","React","Animated","animations","actions","open","scale","theme","toValue","duration","useNativeDriver","animation","close","onStateChange","toggle","colors","labelColor","backdropOpacity","inputRange","outputRange","opacities","scales","opacity","prevActions","setPrevActions","styles","backgroundColor","safeArea","marginHorizontal","it","transform","surface","onPress","expanded","testID","withTheme","FABGroupWithTheme","alignItems","container","StyleSheet","justifyContent","fab","marginBottom","marginTop","absoluteFillObject","label","borderRadius","paddingHorizontal","paddingVertical","marginVertical","elevation","item","flexDirection"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {\n  StyleProp,\n  StyleSheet,\n  Animated,\n  SafeAreaView,\n  TouchableWithoutFeedback,\n  View,\n  ViewStyle,\n} from 'react-native';\nimport color from 'color';\nimport FAB from './FAB';\nimport Text from '../Typography/Text';\nimport Card from '../Card/Card';\nimport { withTheme } from '../../core/theming';\nimport type { IconSource } from '../Icon';\n\ntype Props = {\n  /**\n   * Action items to display in the form of a speed dial.\n   * An action item should contain the following properties:\n   * - `icon`: icon to display (required)\n   * - `label`: optional label text\n   * - `accessibilityLabel`: accessibility label for the action, uses label by default if specified\n   * - `color`: custom icon color of the action item\n   * - `style`: pass additional styles for the fab item, for example, `backgroundColor`\n   * - `small`: boolean describing whether small or normal sized FAB is rendered. Defaults to `true`\n   * - `onPress`: callback that is called when `FAB` is pressed (required)\n   */\n  actions: Array<{\n    icon: IconSource;\n    label?: string;\n    color?: string;\n    accessibilityLabel?: string;\n    style?: StyleProp<ViewStyle>;\n    small?: boolean;\n    onPress: () => void;\n    testID?: string;\n  }>;\n  /**\n   * Icon to display for the `FAB`.\n   * You can toggle it based on whether the speed dial is open to display a different icon.\n   */\n  icon: IconSource;\n  /**\n   * Accessibility label for the FAB. This is read by the screen reader when the user taps the FAB.\n   */\n  accessibilityLabel?: string;\n  /**\n   * Custom color for the `FAB`.\n   */\n  color?: string;\n  /**\n   * Function to execute on pressing the `FAB`.\n   */\n  onPress?: () => void;\n  /**\n   * Whether the speed dial is open.\n   */\n  open: boolean;\n  /**\n   * Callback which is called on opening and closing the speed dial.\n   * The open state needs to be updated when it's called, otherwise the change is dropped.\n   */\n  onStateChange: (state: { open: boolean }) => void;\n  /**\n   * Whether `FAB` is currently visible.\n   */\n  visible: boolean;\n  /**\n   * Style for the group. You can use it to pass additional styles if you need.\n   * For example, you can set an additional padding if you have a tab bar at the bottom.\n   */\n  style?: StyleProp<ViewStyle>;\n  /**\n   * Style for the FAB. It allows to pass the FAB button styles, such as backgroundColor.\n   */\n  fabStyle?: StyleProp<ViewStyle>;\n  /**\n   * @optional\n   */\n  theme: ReactNativePaper.Theme;\n  /**\n   * Pass down testID from Group props to FAB.\n   */\n  testID?: string;\n};\n\n/**\n * A component to display a stack of FABs with related actions in a speed dial.\n * To render the group above other components, you'll need to wrap it with the [`Portal`](portal.html) component.\n *\n * <div class=\"screenshots\">\n *   <img src=\"screenshots/fab-group.png\" />\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { FAB, Portal, Provider } from 'react-native-paper';\n *\n * const MyComponent = () => {\n *   const [state, setState] = React.useState({ open: false });\n *\n *   const onStateChange = ({ open }) => setState({ open });\n *\n *   const { open } = state;\n *\n *   return (\n *     <Provider>\n *       <Portal>\n *         <FAB.Group\n *           open={open}\n *           icon={open ? 'calendar-today' : 'plus'}\n *           actions={[\n *             { icon: 'plus', onPress: () => console.log('Pressed add') },\n *             {\n *               icon: 'star',\n *               label: 'Star',\n *               onPress: () => console.log('Pressed star'),\n *             },\n *             {\n *               icon: 'email',\n *               label: 'Email',\n *               onPress: () => console.log('Pressed email'),\n *             },\n *             {\n *               icon: 'bell',\n *               label: 'Remind',\n *               onPress: () => console.log('Pressed notifications'),\n *               small: false,\n *             },\n *           ]}\n *           onStateChange={onStateChange}\n *           onPress={() => {\n *             if (open) {\n *               // do something if the speed dial is open\n *             }\n *           }}\n *         />\n *       </Portal>\n *     </Provider>\n *   );\n * };\n *\n * export default MyComponent;\n * ```\n */\nconst FABGroup = ({\n  actions,\n  icon,\n  open,\n  onPress,\n  accessibilityLabel,\n  theme,\n  style,\n  fabStyle,\n  visible,\n  testID,\n  onStateChange,\n  color: colorProp,\n}: Props) => {\n  const { current: backdrop } = React.useRef<Animated.Value>(\n    new Animated.Value(0)\n  );\n  const animations = React.useRef<Animated.Value[]>(\n    actions.map(() => new Animated.Value(open ? 1 : 0))\n  );\n\n  const [prevActions, setPrevActions] = React.useState<\n    | {\n        icon: IconSource;\n        label?: string;\n        color?: string;\n        accessibilityLabel?: string;\n        style?: StyleProp<ViewStyle>;\n        onPress: () => void;\n        testID?: string;\n      }[]\n    | null\n  >(null);\n\n  const { scale } = theme.animation;\n\n  React.useEffect(() => {\n    if (open) {\n      Animated.parallel([\n        Animated.timing(backdrop, {\n          toValue: 1,\n          duration: 250 * scale,\n          useNativeDriver: true,\n        }),\n        Animated.stagger(\n          50 * scale,\n          animations.current\n            .map((animation) =>\n              Animated.timing(animation, {\n                toValue: 1,\n                duration: 150 * scale,\n                useNativeDriver: true,\n              })\n            )\n            .reverse()\n        ),\n      ]).start();\n    } else {\n      Animated.parallel([\n        Animated.timing(backdrop, {\n          toValue: 0,\n          duration: 200 * scale,\n          useNativeDriver: true,\n        }),\n        ...animations.current.map((animation) =>\n          Animated.timing(animation, {\n            toValue: 0,\n            duration: 150 * scale,\n            useNativeDriver: true,\n          })\n        ),\n      ]).start();\n    }\n  }, [open, actions, backdrop, scale]);\n\n  const close = () => onStateChange({ open: false });\n\n  const toggle = () => onStateChange({ open: !open });\n\n  const { colors } = theme;\n\n  const labelColor = theme.dark\n    ? colors.text\n    : color(colors.text).fade(0.54).rgb().string();\n  const backdropOpacity = open\n    ? backdrop.interpolate({\n        inputRange: [0, 0.5, 1],\n        outputRange: [0, 1, 1],\n      })\n    : backdrop;\n\n  const opacities = animations.current;\n  const scales = opacities.map((opacity) =>\n    open\n      ? opacity.interpolate({\n          inputRange: [0, 1],\n          outputRange: [0.8, 1],\n        })\n      : 1\n  );\n\n  if (actions.length !== prevActions?.length) {\n    animations.current = actions.map(\n      (_, i) => animations.current[i] || new Animated.Value(open ? 1 : 0)\n    );\n    setPrevActions(actions);\n  }\n\n  return (\n    <View pointerEvents=\"box-none\" style={[styles.container, style]}>\n      <TouchableWithoutFeedback onPress={close}>\n        <Animated.View\n          pointerEvents={open ? 'auto' : 'none'}\n          style={[\n            styles.backdrop,\n            {\n              opacity: backdropOpacity,\n              backgroundColor: colors.backdrop,\n            },\n          ]}\n        />\n      </TouchableWithoutFeedback>\n      <SafeAreaView pointerEvents=\"box-none\" style={styles.safeArea}>\n        <View pointerEvents={open ? 'box-none' : 'none'}>\n          {actions.map((it, i) => (\n            <View\n              key={i} // eslint-disable-line react/no-array-index-key\n              style={[\n                styles.item,\n                {\n                  marginHorizontal:\n                    typeof it.small === 'undefined' || it.small ? 24 : 16,\n                },\n              ]}\n              pointerEvents={open ? 'box-none' : 'none'}\n            >\n              {it.label && (\n                <View>\n                  <Card\n                    style={\n                      [\n                        styles.label,\n                        {\n                          transform: [{ scale: scales[i] }],\n                          opacity: opacities[i],\n                        },\n                      ] as StyleProp<ViewStyle>\n                    }\n                    onPress={() => {\n                      it.onPress();\n                      close();\n                    }}\n                    accessibilityLabel={\n                      it.accessibilityLabel !== 'undefined'\n                        ? it.accessibilityLabel\n                        : it.label\n                    }\n                    // @ts-expect-error We keep old a11y props for backwards compat with old RN versions\n                    accessibilityTraits=\"button\"\n                    accessibilityComponentType=\"button\"\n                    accessibilityRole=\"button\"\n                  >\n                    <Text style={{ color: labelColor }}>{it.label}</Text>\n                  </Card>\n                </View>\n              )}\n              <FAB\n                small={typeof it.small !== 'undefined' ? it.small : true}\n                icon={it.icon}\n                color={it.color}\n                style={\n                  [\n                    {\n                      transform: [{ scale: scales[i] }],\n                      opacity: opacities[i],\n                      backgroundColor: theme.colors.surface,\n                    },\n                    it.style,\n                  ] as StyleProp<ViewStyle>\n                }\n                onPress={() => {\n                  it.onPress();\n                  close();\n                }}\n                accessibilityLabel={\n                  typeof it.accessibilityLabel !== 'undefined'\n                    ? it.accessibilityLabel\n                    : it.label\n                }\n                // @ts-expect-error We keep old a11y props for backwards compat with old RN versions\n                accessibilityTraits=\"button\"\n                accessibilityComponentType=\"button\"\n                accessibilityRole=\"button\"\n                testID={it.testID}\n                visible={open}\n              />\n            </View>\n          ))}\n        </View>\n        <FAB\n          onPress={() => {\n            onPress?.();\n            toggle();\n          }}\n          icon={icon}\n          color={colorProp}\n          accessibilityLabel={accessibilityLabel}\n          // @ts-expect-error We keep old a11y props for backwards compat with old RN versions\n          accessibilityTraits=\"button\"\n          accessibilityComponentType=\"button\"\n          accessibilityRole=\"button\"\n          accessibilityState={{ expanded: open }}\n          style={[styles.fab, fabStyle]}\n          visible={visible}\n          testID={testID}\n        />\n      </SafeAreaView>\n    </View>\n  );\n};\n\nFABGroup.displayName = 'FAB.Group';\n\nexport default withTheme(FABGroup);\n\n// @component-docs ignore-next-line\nconst FABGroupWithTheme = withTheme(FABGroup);\n// @component-docs ignore-next-line\nexport { FABGroupWithTheme as FABGroup };\n\nconst styles = StyleSheet.create({\n  safeArea: {\n    alignItems: 'flex-end',\n  },\n  container: {\n    ...StyleSheet.absoluteFillObject,\n    justifyContent: 'flex-end',\n  },\n  fab: {\n    marginHorizontal: 16,\n    marginBottom: 16,\n    marginTop: 0,\n  },\n  backdrop: {\n    ...StyleSheet.absoluteFillObject,\n  },\n  label: {\n    borderRadius: 5,\n    paddingHorizontal: 12,\n    paddingVertical: 6,\n    marginVertical: 8,\n    marginHorizontal: 16,\n    elevation: 2,\n  },\n  item: {\n    marginBottom: 16,\n    flexDirection: 'row',\n    justifyContent: 'flex-end',\n    alignItems: 'center',\n  },\n});\n"]},"metadata":{},"sourceType":"module"}