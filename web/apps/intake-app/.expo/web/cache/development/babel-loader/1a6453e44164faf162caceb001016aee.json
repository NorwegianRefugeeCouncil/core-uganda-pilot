{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"onPressIn\", \"onPressOut\", \"android_ripple\", \"pressColor\", \"pressOpacity\", \"style\"];\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport { useTheme } from '@react-navigation/native';\nimport * as React from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Easing from \"react-native-web/dist/exports/Easing\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nvar AnimatedPressable = Animated.createAnimatedComponent(Pressable);\nvar ANDROID_VERSION_LOLLIPOP = 21;\nvar ANDROID_SUPPORTS_RIPPLE = Platform.OS === 'android' && Platform.Version >= ANDROID_VERSION_LOLLIPOP;\nexport default function PlatformPressable(_ref) {\n  var onPressIn = _ref.onPressIn,\n      onPressOut = _ref.onPressOut,\n      android_ripple = _ref.android_ripple,\n      pressColor = _ref.pressColor,\n      _ref$pressOpacity = _ref.pressOpacity,\n      pressOpacity = _ref$pressOpacity === void 0 ? 0.3 : _ref$pressOpacity,\n      style = _ref.style,\n      rest = _objectWithoutProperties(_ref, _excluded);\n\n  var _useTheme = useTheme(),\n      dark = _useTheme.dark;\n\n  var _React$useState = React.useState(function () {\n    return new Animated.Value(1);\n  }),\n      _React$useState2 = _slicedToArray(_React$useState, 1),\n      opacity = _React$useState2[0];\n\n  var animateTo = function animateTo(toValue, duration) {\n    if (ANDROID_SUPPORTS_RIPPLE) {\n      return;\n    }\n\n    Animated.timing(opacity, {\n      toValue: toValue,\n      duration: duration,\n      easing: Easing.inOut(Easing.quad),\n      useNativeDriver: true\n    }).start();\n  };\n\n  var handlePressIn = function handlePressIn(e) {\n    animateTo(pressOpacity, 0);\n    onPressIn === null || onPressIn === void 0 ? void 0 : onPressIn(e);\n  };\n\n  var handlePressOut = function handlePressOut(e) {\n    animateTo(1, 200);\n    onPressOut === null || onPressOut === void 0 ? void 0 : onPressOut(e);\n  };\n\n  return React.createElement(AnimatedPressable, _extends({\n    onPressIn: handlePressIn,\n    onPressOut: handlePressOut,\n    android_ripple: ANDROID_SUPPORTS_RIPPLE ? _objectSpread({\n      color: pressColor !== undefined ? pressColor : dark ? 'rgba(255, 255, 255, .32)' : 'rgba(0, 0, 0, .32)'\n    }, android_ripple) : undefined,\n    style: [{\n      opacity: !ANDROID_SUPPORTS_RIPPLE ? opacity : 1\n    }, style]\n  }, rest));\n}","map":{"version":3,"sources":["PlatformPressable.tsx"],"names":["AnimatedPressable","Animated","ANDROID_VERSION_LOLLIPOP","ANDROID_SUPPORTS_RIPPLE","Platform","pressOpacity","rest","dark","useTheme","React","animateTo","toValue","duration","easing","Easing","useNativeDriver","handlePressIn","e","onPressIn","handlePressOut","onPressOut","color","pressColor","android_ripple","opacity"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,SAAA,QAAA,QAAA,0BAAA;AACA,OAAO,KAAP,KAAA,MAAA,OAAA;;;;;AAmBA,IAAMA,iBAAiB,GAAGC,QAAQ,CAARA,uBAAAA,CAA1B,SAA0BA,CAA1B;AAEA,IAAMC,wBAAwB,GAA9B,EAAA;AACA,IAAMC,uBAAuB,GAC3BC,QAAQ,CAARA,EAAAA,KAAAA,SAAAA,IAA6BA,QAAQ,CAARA,OAAAA,IAD/B,wBAAA;AAMA,eAAe,SAAA,iBAAA,OAQL;AAAA,MARgC,SAQhC,QARgC,SAQhC;AAAA,MARgC,UAQhC,QARgC,UAQhC;AAAA,MARgC,cAQhC,QARgC,cAQhC;AAAA,MARgC,UAQhC,QARgC,UAQhC;AAAA,+BAHRC,YAGQ;AAAA,MAHRA,YAGQ,kCARgC,GAQhC;AAAA,MARgC,KAQhC,QARgC,KAQhC;AAAA,MADLC,IACK;;AACR,kBAAiBE,QAAjB,EAAA;AAAA,MAAQD,IAAR,aAAQA,IAAR;;AACA,wBAAkBE,KAAK,CAALA,QAAAA,CAAe;AAAA,WAAM,IAAIR,QAAQ,CAAZ,KAAA,CAAvC,CAAuC,CAAN;AAAA,GAAfQ,CAAlB;AAAA;AAAA,MAAM,OAAN;;AAEA,MAAMC,SAAS,GAAG,SAAZA,SAAY,CAAA,OAAA,EAAA,QAAA,EAAuC;AACvD,QAAA,uBAAA,EAA6B;AAC3B;AACD;;AAEDT,IAAAA,QAAQ,CAARA,MAAAA,CAAAA,OAAAA,EAAyB;AACvBU,MAAAA,OADuB,EACvBA,OADuB;AAEvBC,MAAAA,QAFuB,EAEvBA,QAFuB;AAGvBC,MAAAA,MAAM,EAAEC,MAAM,CAANA,KAAAA,CAAaA,MAAM,CAHJ,IAGfA,CAHe;AAIvBC,MAAAA,eAAe,EAAE;AAJM,KAAzBd,EAAAA,KAAAA;AALF,GAAA;;AAaA,MAAMe,aAAa,GAAIC,SAAjBD,aAAiBC,CAAAA,CAAD,EAA8B;AAClDP,IAAAA,SAAS,CAAA,YAAA,EAATA,CAAS,CAATA;AACAQ,IAAAA,SAAS,KAATA,IAAAA,IAAAA,SAAS,KAAA,KAATA,CAAAA,GAAAA,KAAAA,CAAAA,GAAAA,SAAS,CAATA,CAAS,CAATA;AAFF,GAAA;;AAKA,MAAMC,cAAc,GAAIF,SAAlBE,cAAkBF,CAAAA,CAAD,EAA8B;AACnDP,IAAAA,SAAS,CAAA,CAAA,EAATA,GAAS,CAATA;AACAU,IAAAA,UAAU,KAAVA,IAAAA,IAAAA,UAAU,KAAA,KAAVA,CAAAA,GAAAA,KAAAA,CAAAA,GAAAA,UAAU,CAAVA,CAAU,CAAVA;AAFF,GAAA;;AAKA,SACE,KAAA,CAAA,aAAA,CAAA,iBAAA,EAAA,QAAA,CAAA;AACE,IAAA,SAAS,EADX,aAAA;AAEE,IAAA,UAAU,EAFZ,cAAA;AAGE,IAAA,cAAc,EACZjB,uBAAuB;AAEjBkB,MAAAA,KAAK,EACHC,UAAU,KAAVA,SAAAA,GAAAA,UAAAA,GAEIf,IAAI,GAAA,0BAAA,GAJZ;AADmB,OAQdgB,cARc,IAJ3B,SAAA;AAgBE,IAAA,KAAK,EAAE,CAAC;AAAEC,MAAAA,OAAO,EAAE,CAAA,uBAAA,GAAA,OAAA,GAAqC;AAAhD,KAAD,EAAA,KAAA;AAhBT,GAAA,EADF,IACE,CAAA,CADF;AAqBD","sourcesContent":["import { useTheme } from '@react-navigation/native';\nimport * as React from 'react';\nimport {\n  Animated,\n  Easing,\n  GestureResponderEvent,\n  Platform,\n  Pressable,\n  PressableProps,\n  StyleProp,\n  ViewStyle,\n} from 'react-native';\n\nexport type Props = Omit<PressableProps, 'style'> & {\n  pressColor?: string;\n  pressOpacity?: number;\n  style?: Animated.WithAnimatedValue<StyleProp<ViewStyle>>;\n  children: React.ReactNode;\n};\n\nconst AnimatedPressable = Animated.createAnimatedComponent(Pressable);\n\nconst ANDROID_VERSION_LOLLIPOP = 21;\nconst ANDROID_SUPPORTS_RIPPLE =\n  Platform.OS === 'android' && Platform.Version >= ANDROID_VERSION_LOLLIPOP;\n\n/**\n * PlatformPressable provides an abstraction on top of Pressable to handle platform differences.\n */\nexport default function PlatformPressable({\n  onPressIn,\n  onPressOut,\n  android_ripple,\n  pressColor,\n  pressOpacity = 0.3,\n  style,\n  ...rest\n}: Props) {\n  const { dark } = useTheme();\n  const [opacity] = React.useState(() => new Animated.Value(1));\n\n  const animateTo = (toValue: number, duration: number) => {\n    if (ANDROID_SUPPORTS_RIPPLE) {\n      return;\n    }\n\n    Animated.timing(opacity, {\n      toValue,\n      duration,\n      easing: Easing.inOut(Easing.quad),\n      useNativeDriver: true,\n    }).start();\n  };\n\n  const handlePressIn = (e: GestureResponderEvent) => {\n    animateTo(pressOpacity, 0);\n    onPressIn?.(e);\n  };\n\n  const handlePressOut = (e: GestureResponderEvent) => {\n    animateTo(1, 200);\n    onPressOut?.(e);\n  };\n\n  return (\n    <AnimatedPressable\n      onPressIn={handlePressIn}\n      onPressOut={handlePressOut}\n      android_ripple={\n        ANDROID_SUPPORTS_RIPPLE\n          ? {\n              color:\n                pressColor !== undefined\n                  ? pressColor\n                  : dark\n                  ? 'rgba(255, 255, 255, .32)'\n                  : 'rgba(0, 0, 0, .32)',\n              ...android_ripple,\n            }\n          : undefined\n      }\n      style={[{ opacity: !ANDROID_SUPPORTS_RIPPLE ? opacity : 1 }, style]}\n      {...rest}\n    />\n  );\n}\n"]},"metadata":{},"sourceType":"module"}