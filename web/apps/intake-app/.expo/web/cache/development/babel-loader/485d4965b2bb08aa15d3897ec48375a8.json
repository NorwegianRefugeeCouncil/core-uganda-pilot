{"ast":null,"code":"import * as React from 'react';\nvar MISSING_CONTEXT_ERROR = \"Couldn't find a navigation context. Have you wrapped your app with 'NavigationContainer'? See https://reactnavigation.org/docs/getting-started for setup instructions.\";\nexport default React.createContext({\n  isDefault: true,\n\n  get getKey() {\n    throw new Error(MISSING_CONTEXT_ERROR);\n  },\n\n  get setKey() {\n    throw new Error(MISSING_CONTEXT_ERROR);\n  },\n\n  get getState() {\n    throw new Error(MISSING_CONTEXT_ERROR);\n  },\n\n  get setState() {\n    throw new Error(MISSING_CONTEXT_ERROR);\n  },\n\n  get getIsInitial() {\n    throw new Error(MISSING_CONTEXT_ERROR);\n  }\n\n});","map":{"version":3,"sources":["NavigationStateContext.tsx"],"names":["MISSING_CONTEXT_ERROR","isDefault"],"mappings":"AACA,OAAO,KAAP,KAAA,MAAA,OAAA;AAEA,IAAMA,qBAAqB,GAA3B,wKAAA;AAGA,eAAe,KAAK,CAAL,aAAA,CAcZ;AACDC,EAAAA,SAAS,EADR,IAAA;;AAGD,MAAA,MAAA,GAAkB;AAChB,UAAM,IAAA,KAAA,CAAN,qBAAM,CAAN;AAJD,GAAA;;AAMD,MAAA,MAAA,GAAkB;AAChB,UAAM,IAAA,KAAA,CAAN,qBAAM,CAAN;AAPD,GAAA;;AASD,MAAA,QAAA,GAAoB;AAClB,UAAM,IAAA,KAAA,CAAN,qBAAM,CAAN;AAVD,GAAA;;AAYD,MAAA,QAAA,GAAoB;AAClB,UAAM,IAAA,KAAA,CAAN,qBAAM,CAAN;AAbD,GAAA;;AAeD,MAAA,YAAA,GAAwB;AACtB,UAAM,IAAA,KAAA,CAAN,qBAAM,CAAN;AACD;;AAjBA,CAdY,CAAf","sourcesContent":["import type { NavigationState, PartialState } from '@react-navigation/routers';\nimport * as React from 'react';\n\nconst MISSING_CONTEXT_ERROR =\n  \"Couldn't find a navigation context. Have you wrapped your app with 'NavigationContainer'? See https://reactnavigation.org/docs/getting-started for setup instructions.\";\n\nexport default React.createContext<{\n  isDefault?: true;\n  state?: NavigationState | PartialState<NavigationState>;\n  getKey: () => string | undefined;\n  setKey: (key: string) => void;\n  getState: () => NavigationState | PartialState<NavigationState> | undefined;\n  setState: (\n    state: NavigationState | PartialState<NavigationState> | undefined\n  ) => void;\n  getIsInitial: () => boolean;\n  addOptionsGetter?: (\n    key: string,\n    getter: () => object | undefined | null\n  ) => void;\n}>({\n  isDefault: true,\n\n  get getKey(): any {\n    throw new Error(MISSING_CONTEXT_ERROR);\n  },\n  get setKey(): any {\n    throw new Error(MISSING_CONTEXT_ERROR);\n  },\n  get getState(): any {\n    throw new Error(MISSING_CONTEXT_ERROR);\n  },\n  get setState(): any {\n    throw new Error(MISSING_CONTEXT_ERROR);\n  },\n  get getIsInitial(): any {\n    throw new Error(MISSING_CONTEXT_ERROR);\n  },\n});\n"]},"metadata":{},"sourceType":"module"}