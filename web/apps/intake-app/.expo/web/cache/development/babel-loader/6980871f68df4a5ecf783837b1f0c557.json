{"ast":null,"code":"import View from \"react-native-web/dist/exports/View\";\nimport React from \"react\";\nimport { Text, TextInput as TextInputRNP } from \"react-native-paper\";\nimport { darkTheme } from \"../../constants/theme\";\n\nvar TextInput = function TextInput(_ref) {\n  var fieldDefinition = _ref.fieldDefinition,\n      style = _ref.style,\n      value = _ref.value,\n      onChange = _ref.onChange,\n      onBlur = _ref.onBlur,\n      error = _ref.error,\n      invalid = _ref.invalid,\n      isTouched = _ref.isTouched,\n      isDirty = _ref.isDirty,\n      isMultiple = _ref.isMultiple,\n      isQuantity = _ref.isQuantity;\n  return React.createElement(View, {\n    style: style\n  }, fieldDefinition.name && React.createElement(Text, {\n    theme: darkTheme\n  }, fieldDefinition.name), fieldDefinition.description && React.createElement(Text, {\n    theme: darkTheme,\n    style: {\n      fontSize: 10\n    }\n  }, fieldDefinition.description), React.createElement(TextInputRNP, {\n    onChangeText: onChange,\n    value: value,\n    onBlur: onBlur,\n    error: isTouched && isDirty && error,\n    multiline: isMultiple,\n    keyboardType: isQuantity ? \"numeric\" : \"default\"\n  }), isTouched && isDirty && error && React.createElement(Text, null, error.message == '' ? 'invalid' : error.message));\n};\n\nexport default TextInput;","map":{"version":3,"sources":["/home/nilueps/GolandProjects/core/web/apps/intake-app/src/components/form/TextInput.tsx"],"names":["React","Text","TextInput","TextInputRNP","darkTheme","fieldDefinition","style","value","onChange","onBlur","error","invalid","isTouched","isDirty","isMultiple","isQuantity","name","description","fontSize","message"],"mappings":";AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,IAAR,EAAcC,SAAS,IAAIC,YAA3B,QAA8C,oBAA9C;AACA,SAAQC,SAAR;;AAGA,IAAMF,SAA+B,GAAG,SAAlCA,SAAkC,OAa9B;AAAA,MAXFG,eAWE,QAXFA,eAWE;AAAA,MAVFC,KAUE,QAVFA,KAUE;AAAA,MATFC,KASE,QATFA,KASE;AAAA,MARFC,QAQE,QARFA,QAQE;AAAA,MAPFC,MAOE,QAPFA,MAOE;AAAA,MANFC,KAME,QANFA,KAME;AAAA,MALFC,OAKE,QALFA,OAKE;AAAA,MAJFC,SAIE,QAJFA,SAIE;AAAA,MAHFC,OAGE,QAHFA,OAGE;AAAA,MAFFC,UAEE,QAFFA,UAEE;AAAA,MADFC,UACE,QADFA,UACE;AAEN,SACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAET;AAAb,KACKD,eAAe,CAACW,IAAhB,IAAwB,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEZ;AAAb,KAAyBC,eAAe,CAACW,IAAzC,CAD7B,EAEKX,eAAe,CAACY,WAAhB,IACG,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEb,SAAb;AAAwB,IAAA,KAAK,EAAE;AAACc,MAAAA,QAAQ,EAAE;AAAX;AAA/B,KACKb,eAAe,CAACY,WADrB,CAHR,EAOI,oBAAC,YAAD;AACI,IAAA,YAAY,EAAET,QADlB;AAEI,IAAA,KAAK,EAAED,KAFX;AAGI,IAAA,MAAM,EAAEE,MAHZ;AAII,IAAA,KAAK,EAAEG,SAAS,IAAIC,OAAb,IAAwBH,KAJnC;AAKI,IAAA,SAAS,EAAEI,UALf;AAMI,IAAA,YAAY,EAAEC,UAAU,GAAG,SAAH,GAAe;AAN3C,IAPJ,EAeKH,SAAS,IAAIC,OAAb,IAAwBH,KAAxB,IACG,oBAAC,IAAD,QACKA,KAAK,CAACS,OAAN,IAAiB,EAAjB,GAAsB,SAAtB,GAAkCT,KAAK,CAACS,OAD7C,CAhBR,CADJ;AAwBH,CAvCD;;AAyCA,eAAejB,SAAf","sourcesContent":["import {View} from \"react-native\";\nimport React from \"react\";\nimport {Text, TextInput as TextInputRNP} from \"react-native-paper\";\nimport {darkTheme} from \"../../constants/theme\";\nimport {InputProps} from \"./FormControl\";\n\nconst TextInput: React.FC<InputProps> = (\n    {\n        fieldDefinition,\n        style,\n        value,\n        onChange,\n        onBlur,\n        error,\n        invalid,\n        isTouched,\n        isDirty,\n        isMultiple,\n        isQuantity\n    }) => {\n\n    return (\n        <View style={style}>\n            {fieldDefinition.name && <Text theme={darkTheme}>{fieldDefinition.name}</Text>}\n            {fieldDefinition.description &&(\n                <Text theme={darkTheme} style={{fontSize: 10}}>\n                    {fieldDefinition.description}\n                </Text>\n            )}\n            <TextInputRNP\n                onChangeText={onChange}\n                value={value}\n                onBlur={onBlur}\n                error={isTouched && isDirty && error}\n                multiline={isMultiple}\n                keyboardType={isQuantity ? \"numeric\" : \"default\"}\n            />\n            {isTouched && isDirty && error && (\n                <Text>\n                    {error.message == '' ? 'invalid' : error.message}\n                </Text>\n            )}\n        </View>\n\n    );\n};\n\nexport default TextInput;\n"]},"metadata":{},"sourceType":"module"}