{"ast":null,"code":"import _defineProperty2 from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty2(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nimport * as React from 'react';\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport BackHandler from \"react-native-web/dist/exports/BackHandler\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Easing from \"react-native-web/dist/exports/Easing\";\nimport I18nManager from \"react-native-web/dist/exports/I18nManager\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport findNodeHandle from \"react-native-web/dist/exports/findNodeHandle\";\nimport { withTheme } from \"../../core/theming\";\nimport Portal from \"../Portal/Portal\";\nimport Surface from \"../Surface\";\nimport MenuItem from \"./MenuItem\";\nimport { APPROX_STATUSBAR_HEIGHT } from \"../../constants\";\nvar SCREEN_INDENT = 8;\nvar ANIMATION_DURATION = 250;\nvar EASING = Easing.bezier(0.4, 0, 0.2, 1);\n\nvar Menu = function (_React$Component) {\n  _inherits(Menu, _React$Component);\n\n  var _super = _createSuper(Menu);\n\n  function Menu() {\n    var _this;\n\n    _classCallCheck(this, Menu);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      rendered: _this.props.visible,\n      top: 0,\n      left: 0,\n      menuLayout: {\n        width: 0,\n        height: 0\n      },\n      anchorLayout: {\n        width: 0,\n        height: 0\n      },\n      opacityAnimation: new Animated.Value(0),\n      scaleAnimation: new Animated.ValueXY({\n        x: 0,\n        y: 0\n      })\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"anchor\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"menu\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"isCoordinate\", function (anchor) {\n      return !React.isValidElement(anchor) && typeof (anchor === null || anchor === void 0 ? void 0 : anchor.x) === 'number' && typeof (anchor === null || anchor === void 0 ? void 0 : anchor.y) === 'number';\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"measureMenuLayout\", function () {\n      return new Promise(function (resolve) {\n        if (_this.menu) {\n          _this.menu.measureInWindow(function (x, y, width, height) {\n            resolve({\n              x: x,\n              y: y,\n              width: width,\n              height: height\n            });\n          });\n        }\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"measureAnchorLayout\", function () {\n      return new Promise(function (resolve) {\n        var anchor = _this.props.anchor;\n\n        if (_this.isCoordinate(anchor)) {\n          resolve({\n            x: anchor.x,\n            y: anchor.y,\n            width: 0,\n            height: 0\n          });\n          return;\n        }\n\n        if (_this.anchor) {\n          _this.anchor.measureInWindow(function (x, y, width, height) {\n            resolve({\n              x: x,\n              y: y,\n              width: width,\n              height: height\n            });\n          });\n        }\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"updateVisibility\", function _callee() {\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(Promise.resolve());\n\n            case 2:\n              if (_this.props.visible) {\n                _this.show();\n              } else {\n                _this.hide();\n              }\n\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"isBrowser\", function () {\n      return Platform.OS === 'web' && 'document' in global;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"focusFirstDOMNode\", function (el) {\n      if (el && _this.isBrowser()) {\n        var node = findNodeHandle(el);\n        var focusableNode = node.querySelector('button, [href], input, select, textarea, [tabindex]:not([tabindex=\"-1\"])');\n        focusableNode === null || focusableNode === void 0 ? void 0 : focusableNode.focus();\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleDismiss\", function () {\n      if (_this.props.visible) {\n        _this.props.onDismiss();\n      }\n\n      return true;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleKeypress\", function (e) {\n      if (e.key === 'Escape') {\n        _this.props.onDismiss();\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"attachListeners\", function () {\n      BackHandler.addEventListener('hardwareBackPress', _this.handleDismiss);\n      Dimensions.addEventListener('change', _this.handleDismiss);\n      _this.isBrowser() && document.addEventListener('keyup', _this.handleKeypress);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"removeListeners\", function () {\n      BackHandler.removeEventListener('hardwareBackPress', _this.handleDismiss);\n      Dimensions.removeEventListener('change', _this.handleDismiss);\n      _this.isBrowser() && document.removeEventListener('keyup', _this.handleKeypress);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"show\", function _callee2() {\n      var windowLayout, _await$Promise$all, _await$Promise$all2, menuLayout, anchorLayout;\n\n      return _regeneratorRuntime.async(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              windowLayout = Dimensions.get('window');\n              _context2.next = 3;\n              return _regeneratorRuntime.awrap(Promise.all([_this.measureMenuLayout(), _this.measureAnchorLayout()]));\n\n            case 3:\n              _await$Promise$all = _context2.sent;\n              _await$Promise$all2 = _slicedToArray(_await$Promise$all, 2);\n              menuLayout = _await$Promise$all2[0];\n              anchorLayout = _await$Promise$all2[1];\n\n              if (!(!windowLayout.width || !windowLayout.height || !menuLayout.width || !menuLayout.height || !anchorLayout.width && !_this.isCoordinate(_this.props.anchor) || !anchorLayout.height && !_this.isCoordinate(_this.props.anchor))) {\n                _context2.next = 10;\n                break;\n              }\n\n              requestAnimationFrame(_this.show);\n              return _context2.abrupt(\"return\");\n\n            case 10:\n              _this.setState(function () {\n                return {\n                  left: anchorLayout.x,\n                  top: anchorLayout.y,\n                  anchorLayout: {\n                    height: anchorLayout.height,\n                    width: anchorLayout.width\n                  },\n                  menuLayout: {\n                    width: menuLayout.width,\n                    height: menuLayout.height\n                  }\n                };\n              }, function () {\n                _this.attachListeners();\n\n                var animation = _this.props.theme.animation;\n                Animated.parallel([Animated.timing(_this.state.scaleAnimation, {\n                  toValue: {\n                    x: menuLayout.width,\n                    y: menuLayout.height\n                  },\n                  duration: ANIMATION_DURATION * animation.scale,\n                  easing: EASING,\n                  useNativeDriver: true\n                }), Animated.timing(_this.state.opacityAnimation, {\n                  toValue: 1,\n                  duration: ANIMATION_DURATION * animation.scale,\n                  easing: EASING,\n                  useNativeDriver: true\n                })]).start(function (_ref) {\n                  var finished = _ref.finished;\n\n                  if (finished) {\n                    _this.focusFirstDOMNode(_this.menu);\n                  }\n                });\n              });\n\n            case 11:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"hide\", function () {\n      _this.removeListeners();\n\n      var animation = _this.props.theme.animation;\n      Animated.timing(_this.state.opacityAnimation, {\n        toValue: 0,\n        duration: ANIMATION_DURATION * animation.scale,\n        easing: EASING,\n        useNativeDriver: true\n      }).start(function (_ref2) {\n        var finished = _ref2.finished;\n\n        if (finished) {\n          _this.setState({\n            menuLayout: {\n              width: 0,\n              height: 0\n            },\n            rendered: false\n          });\n\n          _this.state.scaleAnimation.setValue({\n            x: 0,\n            y: 0\n          });\n\n          _this.focusFirstDOMNode(_this.anchor);\n        }\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(Menu, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      if (prevProps.visible !== this.props.visible) {\n        this.updateVisibility();\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.removeListeners();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          visible = _this$props.visible,\n          anchor = _this$props.anchor,\n          contentStyle = _this$props.contentStyle,\n          style = _this$props.style,\n          children = _this$props.children,\n          theme = _this$props.theme,\n          statusBarHeight = _this$props.statusBarHeight,\n          onDismiss = _this$props.onDismiss,\n          overlayAccessibilityLabel = _this$props.overlayAccessibilityLabel;\n      var _this$state = this.state,\n          rendered = _this$state.rendered,\n          menuLayout = _this$state.menuLayout,\n          anchorLayout = _this$state.anchorLayout,\n          opacityAnimation = _this$state.opacityAnimation,\n          scaleAnimation = _this$state.scaleAnimation;\n      var _this$state2 = this.state,\n          left = _this$state2.left,\n          top = _this$state2.top;\n      var additionalVerticalValue = Platform.select({\n        android: statusBarHeight,\n        default: 0\n      });\n      var scaleTransforms = [{\n        scaleX: scaleAnimation.x.interpolate({\n          inputRange: [0, menuLayout.width],\n          outputRange: [0, 1]\n        })\n      }, {\n        scaleY: scaleAnimation.y.interpolate({\n          inputRange: [0, menuLayout.height],\n          outputRange: [0, 1]\n        })\n      }];\n      var windowLayout = Dimensions.get('window');\n      var positionTransforms = [];\n\n      if (left <= windowLayout.width - menuLayout.width - SCREEN_INDENT) {\n        positionTransforms.push({\n          translateX: scaleAnimation.x.interpolate({\n            inputRange: [0, menuLayout.width],\n            outputRange: [-(menuLayout.width / 2), 0]\n          })\n        });\n\n        if (left < SCREEN_INDENT) {\n          left = SCREEN_INDENT;\n        }\n      } else {\n        positionTransforms.push({\n          translateX: scaleAnimation.x.interpolate({\n            inputRange: [0, menuLayout.width],\n            outputRange: [menuLayout.width / 2, 0]\n          })\n        });\n        left += anchorLayout.width - menuLayout.width;\n        var right = left + menuLayout.width;\n\n        if (right > windowLayout.width - SCREEN_INDENT) {\n          left = windowLayout.width - SCREEN_INDENT - menuLayout.width;\n        }\n      }\n\n      var scrollableMenuHeight = 0;\n\n      if (top >= windowLayout.height - menuLayout.height - SCREEN_INDENT - additionalVerticalValue && top <= windowLayout.height - top) {\n        scrollableMenuHeight = windowLayout.height - top - SCREEN_INDENT - additionalVerticalValue;\n      } else if (top >= windowLayout.height - menuLayout.height - SCREEN_INDENT - additionalVerticalValue && top >= windowLayout.height - top && top <= menuLayout.height - anchorLayout.height + SCREEN_INDENT - additionalVerticalValue) {\n        scrollableMenuHeight = top + anchorLayout.height - SCREEN_INDENT + additionalVerticalValue;\n      }\n\n      scrollableMenuHeight = scrollableMenuHeight > windowLayout.height - 2 * SCREEN_INDENT ? windowLayout.height - 2 * SCREEN_INDENT : scrollableMenuHeight;\n\n      if (top <= windowLayout.height - menuLayout.height - SCREEN_INDENT - additionalVerticalValue || top >= windowLayout.height - menuLayout.height - SCREEN_INDENT - additionalVerticalValue && top <= windowLayout.height - top) {\n        positionTransforms.push({\n          translateY: scaleAnimation.y.interpolate({\n            inputRange: [0, menuLayout.height],\n            outputRange: [-((scrollableMenuHeight || menuLayout.height) / 2), 0]\n          })\n        });\n\n        if (top < SCREEN_INDENT) {\n          top = SCREEN_INDENT;\n        }\n      } else {\n        positionTransforms.push({\n          translateY: scaleAnimation.y.interpolate({\n            inputRange: [0, menuLayout.height],\n            outputRange: [(scrollableMenuHeight || menuLayout.height) / 2, 0]\n          })\n        });\n        top += anchorLayout.height - (scrollableMenuHeight || menuLayout.height);\n        var bottom = top + (scrollableMenuHeight || menuLayout.height) + additionalVerticalValue;\n\n        if (bottom > windowLayout.height - SCREEN_INDENT) {\n          top = scrollableMenuHeight === windowLayout.height - 2 * SCREEN_INDENT ? -SCREEN_INDENT * 2 : windowLayout.height - menuLayout.height - SCREEN_INDENT - additionalVerticalValue;\n        }\n      }\n\n      var shadowMenuContainerStyle = _objectSpread({\n        opacity: opacityAnimation,\n        transform: scaleTransforms,\n        borderRadius: theme.roundness\n      }, scrollableMenuHeight ? {\n        height: scrollableMenuHeight\n      } : {});\n\n      var positionStyle = _objectSpread({\n        top: this.isCoordinate(anchor) ? top : top + additionalVerticalValue\n      }, I18nManager.isRTL ? {\n        right: left\n      } : {\n        left: left\n      });\n\n      return React.createElement(View, {\n        ref: function ref(_ref3) {\n          _this2.anchor = _ref3;\n        },\n        collapsable: false\n      }, this.isCoordinate(anchor) ? null : anchor, rendered ? React.createElement(Portal, null, React.createElement(TouchableWithoutFeedback, {\n        accessibilityLabel: overlayAccessibilityLabel,\n        accessibilityRole: \"button\",\n        onPress: onDismiss\n      }, React.createElement(View, {\n        style: StyleSheet.absoluteFill\n      })), React.createElement(View, {\n        ref: function ref(_ref4) {\n          _this2.menu = _ref4;\n        },\n        collapsable: false,\n        accessibilityViewIsModal: visible,\n        style: [styles.wrapper, positionStyle, style],\n        pointerEvents: visible ? 'box-none' : 'none',\n        onAccessibilityEscape: onDismiss\n      }, React.createElement(Animated.View, {\n        style: {\n          transform: positionTransforms\n        }\n      }, React.createElement(Surface, {\n        style: [styles.shadowMenuContainer, shadowMenuContainerStyle, contentStyle]\n      }, scrollableMenuHeight && React.createElement(ScrollView, null, children) || React.createElement(React.Fragment, null, children))))) : null);\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      if (nextProps.visible && !prevState.rendered) {\n        return {\n          rendered: true\n        };\n      }\n\n      return null;\n    }\n  }]);\n\n  return Menu;\n}(React.Component);\n\n_defineProperty(Menu, \"Item\", MenuItem);\n\n_defineProperty(Menu, \"defaultProps\", {\n  statusBarHeight: APPROX_STATUSBAR_HEIGHT,\n  overlayAccessibilityLabel: 'Close menu'\n});\n\nvar styles = StyleSheet.create({\n  wrapper: {\n    position: 'absolute'\n  },\n  shadowMenuContainer: {\n    opacity: 0,\n    paddingVertical: 8,\n    elevation: 8\n  }\n});\nexport default withTheme(Menu);","map":{"version":3,"sources":["Menu.tsx"],"names":["SCREEN_INDENT","ANIMATION_DURATION","EASING","Easing","Menu","React","MenuItem","statusBarHeight","overlayAccessibilityLabel","nextProps","prevState","rendered","top","left","menuLayout","width","height","anchorLayout","opacityAnimation","Animated","scaleAnimation","x","y","componentDidUpdate","prevProps","componentWillUnmount","anchor","resolve","Promise","Platform","el","node","findNodeHandle","focusableNode","e","BackHandler","Dimensions","document","windowLayout","requestAnimationFrame","animation","toValue","duration","easing","useNativeDriver","finished","render","additionalVerticalValue","android","default","scaleTransforms","scaleX","inputRange","outputRange","scaleY","positionTransforms","translateX","right","scrollableMenuHeight","translateY","bottom","shadowMenuContainerStyle","opacity","transform","borderRadius","theme","positionStyle","ref","onDismiss","StyleSheet","absoluteFill","styles","visible","wrapper","position","shadowMenuContainer","paddingVertical","elevation","withTheme"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {\n  Platform,\n  StyleProp,\n  StyleSheet,\n  Animated,\n  BackHandler,\n  Dimensions,\n  Easing,\n  I18nManager,\n  LayoutRectangle,\n  TouchableWithoutFeedback,\n  View,\n  ViewStyle,\n  ScrollView,\n  findNodeHandle,\n} from 'react-native';\n\nimport { withTheme } from '../../core/theming';\nimport type { $Omit } from '../../types';\nimport Portal from '../Portal/Portal';\nimport Surface from '../Surface';\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport MenuItem, { MenuItem as _MenuItem } from './MenuItem';\nimport { APPROX_STATUSBAR_HEIGHT } from '../../constants';\n\ntype Props = {\n  /**\n   * Whether the Menu is currently visible.\n   */\n  visible: boolean;\n  /**\n   * The anchor to open the menu from. In most cases, it will be a button that opens the menu.\n   */\n  anchor: React.ReactNode | { x: number; y: number };\n  /**\n   * Extra margin to add at the top of the menu to account for translucent status bar on Android.\n   * If you are using Expo, we assume translucent status bar and set a height for status bar automatically.\n   * Pass `0` or a custom value to and customize it.\n   * This is automatically handled on iOS.\n   */\n  statusBarHeight?: number;\n  /**\n   * Callback called when Menu is dismissed. The `visible` prop needs to be updated when this is called.\n   */\n  onDismiss: () => void;\n  /**\n   * Accessibility label for the overlay. This is read by the screen reader when the user taps outside the menu.\n   */\n  overlayAccessibilityLabel?: string;\n  /**\n   * Content of the `Menu`.\n   */\n  children: React.ReactNode;\n  /**\n   * Style of menu's inner content.\n   */\n  contentStyle?: StyleProp<ViewStyle>;\n  style?: StyleProp<ViewStyle>;\n  /**\n   * @optional\n   */\n  theme: ReactNativePaper.Theme;\n};\n\ntype Layout = $Omit<$Omit<LayoutRectangle, 'x'>, 'y'>;\n\ntype State = {\n  rendered: boolean;\n  top: number;\n  left: number;\n  menuLayout: Layout;\n  anchorLayout: Layout;\n  opacityAnimation: Animated.Value;\n  scaleAnimation: Animated.ValueXY;\n};\n\n// Minimum padding between the edge of the screen and the menu\nconst SCREEN_INDENT = 8;\n// From https://material.io/design/motion/speed.html#duration\nconst ANIMATION_DURATION = 250;\n// From the 'Standard easing' section of https://material.io/design/motion/speed.html#easing\nconst EASING = Easing.bezier(0.4, 0, 0.2, 1);\n\n/**\n * Menus display a list of choices on temporary elevated surfaces. Their placement varies based on the element that opens them.\n *\n *  <div class=\"screenshots\">\n *   <img class=\"medium\" src=\"screenshots/menu-1.png\" />\n *   <img class=\"medium\" src=\"screenshots/menu-2.png\" />\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { View } from 'react-native';\n * import { Button, Menu, Divider, Provider } from 'react-native-paper';\n *\n * const MyComponent = () => {\n *   const [visible, setVisible] = React.useState(false);\n *\n *   const openMenu = () => setVisible(true);\n *\n *   const closeMenu = () => setVisible(false);\n *\n *   return (\n *     <Provider>\n *       <View\n *         style={{\n *           paddingTop: 50,\n *           flexDirection: 'row',\n *           justifyContent: 'center',\n *         }}>\n *         <Menu\n *           visible={visible}\n *           onDismiss={closeMenu}\n *           anchor={<Button onPress={openMenu}>Show menu</Button>}>\n *           <Menu.Item onPress={() => {}} title=\"Item 1\" />\n *           <Menu.Item onPress={() => {}} title=\"Item 2\" />\n *           <Divider />\n *           <Menu.Item onPress={() => {}} title=\"Item 3\" />\n *         </Menu>\n *       </View>\n *     </Provider>\n *   );\n * };\n *\n * export default MyComponent;\n * ```\n */\nclass Menu extends React.Component<Props, State> {\n  // @component ./MenuItem.tsx\n  static Item = MenuItem;\n\n  static defaultProps = {\n    statusBarHeight: APPROX_STATUSBAR_HEIGHT,\n    overlayAccessibilityLabel: 'Close menu',\n  };\n\n  static getDerivedStateFromProps(nextProps: Props, prevState: State) {\n    if (nextProps.visible && !prevState.rendered) {\n      return { rendered: true };\n    }\n\n    return null;\n  }\n\n  state = {\n    rendered: this.props.visible,\n    top: 0,\n    left: 0,\n    menuLayout: { width: 0, height: 0 },\n    anchorLayout: { width: 0, height: 0 },\n    opacityAnimation: new Animated.Value(0),\n    scaleAnimation: new Animated.ValueXY({ x: 0, y: 0 }),\n  };\n\n  componentDidUpdate(prevProps: Props) {\n    if (prevProps.visible !== this.props.visible) {\n      this.updateVisibility();\n    }\n  }\n\n  componentWillUnmount() {\n    this.removeListeners();\n  }\n\n  private anchor?: View | null = null;\n  private menu?: View | null = null;\n\n  private isCoordinate = (anchor: any): anchor is { x: number; y: number } =>\n    !React.isValidElement(anchor) &&\n    typeof anchor?.x === 'number' &&\n    typeof anchor?.y === 'number';\n\n  private measureMenuLayout = () =>\n    new Promise<LayoutRectangle>((resolve) => {\n      if (this.menu) {\n        this.menu.measureInWindow((x, y, width, height) => {\n          resolve({ x, y, width, height });\n        });\n      }\n    });\n\n  private measureAnchorLayout = () =>\n    new Promise<LayoutRectangle>((resolve) => {\n      const { anchor } = this.props;\n      if (this.isCoordinate(anchor)) {\n        resolve({ x: anchor.x, y: anchor.y, width: 0, height: 0 });\n        return;\n      }\n\n      if (this.anchor) {\n        this.anchor.measureInWindow((x, y, width, height) => {\n          resolve({ x, y, width, height });\n        });\n      }\n    });\n\n  private updateVisibility = async () => {\n    // Menu is rendered in Portal, which updates items asynchronously\n    // We need to do the same here so that the ref is up-to-date\n    await Promise.resolve();\n\n    if (this.props.visible) {\n      this.show();\n    } else {\n      this.hide();\n    }\n  };\n\n  private isBrowser = () => Platform.OS === 'web' && 'document' in global;\n\n  private focusFirstDOMNode = (el: View | null | undefined) => {\n    if (el && this.isBrowser()) {\n      // When in the browser, we want to focus the first focusable item on toggle\n      // For example, when menu is shown, focus the first item in the menu\n      // And when menu is dismissed, send focus back to the button to resume tabbing\n      const node: any = findNodeHandle(el);\n      const focusableNode = node.querySelector(\n        // This is a rough list of selectors that can be focused\n        'button, [href], input, select, textarea, [tabindex]:not([tabindex=\"-1\"])'\n      );\n\n      focusableNode?.focus();\n    }\n  };\n\n  private handleDismiss = () => {\n    if (this.props.visible) {\n      this.props.onDismiss();\n    }\n    return true;\n  };\n\n  private handleKeypress = (e: KeyboardEvent) => {\n    if (e.key === 'Escape') {\n      this.props.onDismiss();\n    }\n  };\n\n  private attachListeners = () => {\n    BackHandler.addEventListener('hardwareBackPress', this.handleDismiss);\n    Dimensions.addEventListener('change', this.handleDismiss);\n\n    this.isBrowser() && document.addEventListener('keyup', this.handleKeypress);\n  };\n\n  private removeListeners = () => {\n    BackHandler.removeEventListener('hardwareBackPress', this.handleDismiss);\n    Dimensions.removeEventListener('change', this.handleDismiss);\n\n    this.isBrowser() &&\n      document.removeEventListener('keyup', this.handleKeypress);\n  };\n\n  private show = async () => {\n    const windowLayout = Dimensions.get('window');\n    const [menuLayout, anchorLayout] = await Promise.all([\n      this.measureMenuLayout(),\n      this.measureAnchorLayout(),\n    ]);\n\n    // When visible is true for first render\n    // native views can be still not rendered and\n    // measureMenuLayout/measureAnchorLayout functions\n    // return wrong values e.g { x:0, y: 0, width: 0, height: 0 }\n    // so we have to wait until views are ready\n    // and rerun this function to show menu\n    if (\n      !windowLayout.width ||\n      !windowLayout.height ||\n      !menuLayout.width ||\n      !menuLayout.height ||\n      (!anchorLayout.width && !this.isCoordinate(this.props.anchor)) ||\n      (!anchorLayout.height && !this.isCoordinate(this.props.anchor))\n    ) {\n      requestAnimationFrame(this.show);\n      return;\n    }\n\n    this.setState(\n      () => ({\n        left: anchorLayout.x,\n        top: anchorLayout.y,\n        anchorLayout: {\n          height: anchorLayout.height,\n          width: anchorLayout.width,\n        },\n        menuLayout: {\n          width: menuLayout.width,\n          height: menuLayout.height,\n        },\n      }),\n      () => {\n        this.attachListeners();\n\n        const { animation } = this.props.theme;\n        Animated.parallel([\n          Animated.timing(this.state.scaleAnimation, {\n            toValue: { x: menuLayout.width, y: menuLayout.height },\n            duration: ANIMATION_DURATION * animation.scale,\n            easing: EASING,\n            useNativeDriver: true,\n          }),\n          Animated.timing(this.state.opacityAnimation, {\n            toValue: 1,\n            duration: ANIMATION_DURATION * animation.scale,\n            easing: EASING,\n            useNativeDriver: true,\n          }),\n        ]).start(({ finished }) => {\n          if (finished) {\n            this.focusFirstDOMNode(this.menu);\n          }\n        });\n      }\n    );\n  };\n\n  private hide = () => {\n    this.removeListeners();\n\n    const { animation } = this.props.theme;\n    Animated.timing(this.state.opacityAnimation, {\n      toValue: 0,\n      duration: ANIMATION_DURATION * animation.scale,\n      easing: EASING,\n      useNativeDriver: true,\n    }).start(({ finished }) => {\n      if (finished) {\n        this.setState({ menuLayout: { width: 0, height: 0 }, rendered: false });\n        this.state.scaleAnimation.setValue({ x: 0, y: 0 });\n        this.focusFirstDOMNode(this.anchor);\n      }\n    });\n  };\n\n  render() {\n    const {\n      visible,\n      anchor,\n      contentStyle,\n      style,\n      children,\n      theme,\n      statusBarHeight,\n      onDismiss,\n      overlayAccessibilityLabel,\n    } = this.props;\n\n    const {\n      rendered,\n      menuLayout,\n      anchorLayout,\n      opacityAnimation,\n      scaleAnimation,\n    } = this.state;\n\n    let { left, top } = this.state;\n\n    // I don't know why but on Android measure function is wrong by 24\n    const additionalVerticalValue = Platform.select({\n      android: statusBarHeight,\n      default: 0,\n    });\n\n    const scaleTransforms = [\n      {\n        scaleX: scaleAnimation.x.interpolate({\n          inputRange: [0, menuLayout.width],\n          outputRange: [0, 1],\n        }),\n      },\n      {\n        scaleY: scaleAnimation.y.interpolate({\n          inputRange: [0, menuLayout.height],\n          outputRange: [0, 1],\n        }),\n      },\n    ];\n\n    const windowLayout = Dimensions.get('window');\n\n    // We need to translate menu while animating scale to imitate transform origin for scale animation\n    const positionTransforms = [];\n\n    // Check if menu fits horizontally and if not align it to right.\n    if (left <= windowLayout.width - menuLayout.width - SCREEN_INDENT) {\n      positionTransforms.push({\n        translateX: scaleAnimation.x.interpolate({\n          inputRange: [0, menuLayout.width],\n          outputRange: [-(menuLayout.width / 2), 0],\n        }),\n      });\n\n      // Check if menu position has enough space from left side\n      if (left < SCREEN_INDENT) {\n        left = SCREEN_INDENT;\n      }\n    } else {\n      positionTransforms.push({\n        translateX: scaleAnimation.x.interpolate({\n          inputRange: [0, menuLayout.width],\n          outputRange: [menuLayout.width / 2, 0],\n        }),\n      });\n\n      left += anchorLayout.width - menuLayout.width;\n\n      const right = left + menuLayout.width;\n      // Check if menu position has enough space from right side\n      if (right > windowLayout.width - SCREEN_INDENT) {\n        left = windowLayout.width - SCREEN_INDENT - menuLayout.width;\n      }\n    }\n\n    // If the menu is larger than available vertical space,\n    // calculate the height of scrollable view\n    let scrollableMenuHeight = 0;\n\n    // Check if the menu should be scrollable\n    if (\n      // Check if the menu overflows from bottom side\n      top >=\n        windowLayout.height -\n          menuLayout.height -\n          SCREEN_INDENT -\n          additionalVerticalValue &&\n      // And bottom side of the screen has more space than top side\n      top <= windowLayout.height - top\n    ) {\n      // Scrollable menu should be below the anchor (expands downwards)\n      scrollableMenuHeight =\n        windowLayout.height - top - SCREEN_INDENT - additionalVerticalValue;\n    } else if (\n      // Check if the menu overflows from bottom side\n      top >=\n        windowLayout.height -\n          menuLayout.height -\n          SCREEN_INDENT -\n          additionalVerticalValue &&\n      // And top side of the screen has more space than bottom side\n      top >= windowLayout.height - top &&\n      // And menu overflows from top side\n      top <=\n        menuLayout.height -\n          anchorLayout.height +\n          SCREEN_INDENT -\n          additionalVerticalValue\n    ) {\n      // Scrollable menu should be above the anchor (expands upwards)\n      scrollableMenuHeight =\n        top + anchorLayout.height - SCREEN_INDENT + additionalVerticalValue;\n    }\n\n    // Scrollable menu max height\n    scrollableMenuHeight =\n      scrollableMenuHeight > windowLayout.height - 2 * SCREEN_INDENT\n        ? windowLayout.height - 2 * SCREEN_INDENT\n        : scrollableMenuHeight;\n\n    // Menu is typically positioned below the element that generates it\n    // So first check if it fits below the anchor (expands downwards)\n    if (\n      // Check if menu fits vertically\n      top <=\n        windowLayout.height -\n          menuLayout.height -\n          SCREEN_INDENT -\n          additionalVerticalValue ||\n      // Or if the menu overflows from bottom side\n      (top >=\n        windowLayout.height -\n          menuLayout.height -\n          SCREEN_INDENT -\n          additionalVerticalValue &&\n        // And bottom side of the screen has more space than top side\n        top <= windowLayout.height - top)\n    ) {\n      positionTransforms.push({\n        translateY: scaleAnimation.y.interpolate({\n          inputRange: [0, menuLayout.height],\n          outputRange: [-((scrollableMenuHeight || menuLayout.height) / 2), 0],\n        }),\n      });\n\n      // Check if menu position has enough space from top side\n      if (top < SCREEN_INDENT) {\n        top = SCREEN_INDENT;\n      }\n    } else {\n      positionTransforms.push({\n        translateY: scaleAnimation.y.interpolate({\n          inputRange: [0, menuLayout.height],\n          outputRange: [(scrollableMenuHeight || menuLayout.height) / 2, 0],\n        }),\n      });\n\n      top += anchorLayout.height - (scrollableMenuHeight || menuLayout.height);\n\n      const bottom =\n        top +\n        (scrollableMenuHeight || menuLayout.height) +\n        additionalVerticalValue;\n\n      // Check if menu position has enough space from bottom side\n      if (bottom > windowLayout.height - SCREEN_INDENT) {\n        top =\n          scrollableMenuHeight === windowLayout.height - 2 * SCREEN_INDENT\n            ? -SCREEN_INDENT * 2\n            : windowLayout.height -\n              menuLayout.height -\n              SCREEN_INDENT -\n              additionalVerticalValue;\n      }\n    }\n\n    const shadowMenuContainerStyle = {\n      opacity: opacityAnimation,\n      transform: scaleTransforms,\n      borderRadius: theme.roundness,\n      ...(scrollableMenuHeight ? { height: scrollableMenuHeight } : {}),\n    };\n\n    const positionStyle = {\n      top: this.isCoordinate(anchor) ? top : top + additionalVerticalValue,\n      ...(I18nManager.isRTL ? { right: left } : { left }),\n    };\n\n    return (\n      <View\n        ref={(ref) => {\n          this.anchor = ref;\n        }}\n        collapsable={false}\n      >\n        {this.isCoordinate(anchor) ? null : anchor}\n        {rendered ? (\n          <Portal>\n            <TouchableWithoutFeedback\n              accessibilityLabel={overlayAccessibilityLabel}\n              accessibilityRole=\"button\"\n              onPress={onDismiss}\n            >\n              <View style={StyleSheet.absoluteFill} />\n            </TouchableWithoutFeedback>\n            <View\n              ref={(ref) => {\n                this.menu = ref;\n              }}\n              collapsable={false}\n              accessibilityViewIsModal={visible}\n              style={[styles.wrapper, positionStyle, style]}\n              pointerEvents={visible ? 'box-none' : 'none'}\n              onAccessibilityEscape={onDismiss}\n            >\n              <Animated.View style={{ transform: positionTransforms }}>\n                <Surface\n                  style={\n                    [\n                      styles.shadowMenuContainer,\n                      shadowMenuContainerStyle,\n                      contentStyle,\n                    ] as StyleProp<ViewStyle>\n                  }\n                >\n                  {(scrollableMenuHeight && (\n                    <ScrollView>{children}</ScrollView>\n                  )) || <React.Fragment>{children}</React.Fragment>}\n                </Surface>\n              </Animated.View>\n            </View>\n          </Portal>\n        ) : null}\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  wrapper: {\n    position: 'absolute',\n  },\n  shadowMenuContainer: {\n    opacity: 0,\n    paddingVertical: 8,\n    elevation: 8,\n  },\n});\n\nexport default withTheme(Menu);\n"]},"metadata":{},"sourceType":"module"}