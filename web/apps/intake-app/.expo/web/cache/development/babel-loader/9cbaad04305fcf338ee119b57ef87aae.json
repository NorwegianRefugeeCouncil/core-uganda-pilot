{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport _ from 'lodash';\nexport var initialRecordsState = {\n  formsById: {}\n};\nexport var RECORD_ACTIONS;\n\n(function (RECORD_ACTIONS) {\n  RECORD_ACTIONS[\"GET_RECORDS\"] = \"GET_RECORDS\";\n  RECORD_ACTIONS[\"GET_LOCAL_RECORDS\"] = \"GET_LOCAL_RECORDS\";\n  RECORD_ACTIONS[\"ADD_LOCAL_RECORD\"] = \"ADD_LOCAL_RECORD\";\n})(RECORD_ACTIONS || (RECORD_ACTIONS = {}));\n\nexport var recordsReducer = function recordsReducer(state, action) {\n  var formId = action.payload.formId;\n\n  switch (action.type) {\n    case RECORD_ACTIONS.GET_RECORDS:\n      var records = action.payload.records;\n      return {\n        formsById: _objectSpread(_objectSpread({}, state.formsById), {}, _defineProperty({}, formId, _objectSpread(_objectSpread({}, state.formsById[formId]), {}, {\n          records: records,\n          recordsById: _.keyBy(records, 'id')\n        })))\n      };\n\n    case RECORD_ACTIONS.GET_LOCAL_RECORDS:\n      var localRecords = action.payload.localRecords;\n      return {\n        formsById: _objectSpread(_objectSpread({}, state.formsById), {}, _defineProperty({}, formId, _objectSpread(_objectSpread({}, state.formsById[formId]), {}, {\n          localRecords: localRecords\n        })))\n      };\n\n    case RECORD_ACTIONS.ADD_LOCAL_RECORD:\n      var currentList = state.formsById[formId].localRecords || [];\n      var newList = currentList.concat([action.payload.localRecord]);\n      return {\n        formsById: _objectSpread(_objectSpread({}, state.formsById), {}, _defineProperty({}, formId, _objectSpread(_objectSpread({}, state.formsById[formId]), {}, {\n          localRecords: newList\n        })))\n      };\n\n    default:\n      throw new Error();\n  }\n};","map":{"version":3,"sources":["/home/nilueps/GolandProjects/core/web/apps/intake-app/src/reducers/recordsReducers.ts"],"names":["_","initialRecordsState","formsById","RECORD_ACTIONS","recordsReducer","state","action","formId","payload","type","GET_RECORDS","records","recordsById","keyBy","GET_LOCAL_RECORDS","localRecords","ADD_LOCAL_RECORD","currentList","newList","concat","localRecord","Error"],"mappings":";;;;;;AACA,OAAOA,CAAP,MAAc,QAAd;AAmBA,OAAO,IAAMC,mBAAsC,GAAG;AAClDC,EAAAA,SAAS,EAAE;AADuC,CAA/C;AAIP,WAAYC,cAAZ;;WAAYA,c;AAAAA,EAAAA,c;AAAAA,EAAAA,c;AAAAA,EAAAA,c;GAAAA,c,KAAAA,c;;AAMZ,OAAO,IAAMC,cAAyD,GAAG,SAA5DA,cAA4D,CAACC,KAAD,EAA2BC,MAA3B,EAAqD;AAC1H,MAAOC,MAAP,GAAiBD,MAAM,CAACE,OAAxB,CAAOD,MAAP;;AAEA,UAAQD,MAAM,CAACG,IAAf;AACI,SAAKN,cAAc,CAACO,WAApB;AACI,UAAOC,OAAP,GAAkBL,MAAM,CAACE,OAAzB,CAAOG,OAAP;AACA,aAAO;AACHT,QAAAA,SAAS,kCACFG,KAAK,CAACH,SADJ,2BAEJK,MAFI,kCAGEF,KAAK,CAACH,SAAN,CAAgBK,MAAhB,CAHF;AAIDI,UAAAA,OAAO,EAAEA,OAJR;AAKDC,UAAAA,WAAW,EAAEZ,CAAC,CAACa,KAAF,CAAQF,OAAR,EAAiB,IAAjB;AALZ;AADN,OAAP;;AAUJ,SAAKR,cAAc,CAACW,iBAApB;AACI,UAAOC,YAAP,GAAuBT,MAAM,CAACE,OAA9B,CAAOO,YAAP;AACA,aAAO;AACHb,QAAAA,SAAS,kCACFG,KAAK,CAACH,SADJ,2BAEJK,MAFI,kCAGEF,KAAK,CAACH,SAAN,CAAgBK,MAAhB,CAHF;AAIDQ,UAAAA,YAAY,EAAZA;AAJC;AADN,OAAP;;AASJ,SAAKZ,cAAc,CAACa,gBAApB;AACI,UAAMC,WAAW,GAAGZ,KAAK,CAACH,SAAN,CAAgBK,MAAhB,EAAwBQ,YAAxB,IAAwC,EAA5D;AACA,UAAMG,OAAO,GAAGD,WAAW,CAACE,MAAZ,CAAmB,CAACb,MAAM,CAACE,OAAP,CAAeY,WAAhB,CAAnB,CAAhB;AACA,aAAO;AACHlB,QAAAA,SAAS,kCACFG,KAAK,CAACH,SADJ,2BAEJK,MAFI,kCAGEF,KAAK,CAACH,SAAN,CAAgBK,MAAhB,CAHF;AAIDQ,UAAAA,YAAY,EAAEG;AAJb;AADN,OAAP;;AASJ;AACI,YAAM,IAAIG,KAAJ,EAAN;AArCR;AAuCH,CA1CM","sourcesContent":["import {Reducer} from \"react\";\nimport _ from 'lodash';\nimport {FormDefinition, Record} from \"@core/api-client\";\n\nexport type RecordsStoreProps = {\n    formsById: {\n        [key: string]: {\n            definition: FormDefinition,\n            records: Record[],\n            recordsById: { [key: string]: Record; }\n            localRecords: string[]\n        }\n    }\n}\n\ntype RecordsAction = {\n    type: string, // TODO use enum type\n    payload: any\n}\n\nexport const initialRecordsState: RecordsStoreProps = {\n    formsById: {}\n};\n\nexport enum RECORD_ACTIONS {\n    GET_RECORDS = 'GET_RECORDS',\n    GET_LOCAL_RECORDS = 'GET_LOCAL_RECORDS',\n    ADD_LOCAL_RECORD = 'ADD_LOCAL_RECORD'\n}\n\nexport const recordsReducer: Reducer<RecordsStoreProps, RecordsAction> = (state: RecordsStoreProps, action: RecordsAction) => {\n    const {formId} = action.payload\n\n    switch (action.type) {\n        case RECORD_ACTIONS.GET_RECORDS:\n            const {records} = action.payload\n            return {\n                formsById: {\n                    ...state.formsById,\n                    [formId]: {\n                        ...state.formsById[formId],\n                        records: records,\n                        recordsById: _.keyBy(records, 'id')\n                    }\n                }\n            }\n        case RECORD_ACTIONS.GET_LOCAL_RECORDS:\n            const {localRecords} = action.payload\n            return {\n                formsById: {\n                    ...state.formsById,\n                    [formId]: {\n                        ...state.formsById[formId],\n                        localRecords\n                    }\n                }\n            }\n        case RECORD_ACTIONS.ADD_LOCAL_RECORD:\n            const currentList = state.formsById[formId].localRecords || []\n            const newList = currentList.concat([action.payload.localRecord])\n            return {\n                formsById: {\n                    ...state.formsById,\n                    [formId]: {\n                        ...state.formsById[formId],\n                        localRecords: newList\n                    }\n                }\n            }\n        default:\n            throw new Error();\n    }\n}\n"]},"metadata":{},"sourceType":"module"}