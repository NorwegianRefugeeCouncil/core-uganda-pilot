// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`should match the snapshot no selected value 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    dataSet={Object {}}
    isInvalid={false}
    isRequired={false}
    style={
      Object {
        "width": "100%",
      }
    }
  >
    <View
      dataSet={Object {}}
      feedbackId="field-react-aria-1-feedback"
      hasFeedbackText={true}
      hasHelpText={true}
      helpTextId="field-react-aria-1-helptext"
      isDisabled={false}
      isInvalid={false}
      isReadOnly={false}
      isRequired={false}
      labelId="field-react-aria-1-label"
      nativeID="field-react-aria-1-label"
      setHasFeedbackText={[Function]}
      setHasHelpText={[Function]}
      style={
        Object {
          "flexDirection": "row",
          "justifyContent": "flex-start",
          "marginBottom": 2,
          "marginRight": 12,
        }
      }
    >
      <Text
        dataSet={Object {}}
        level="1"
        style={
          Object {
            "backgroundColor": undefined,
            "color": "#666666",
            "fontFamily": "Roboto_500Medium",
            "fontSize": 18,
            "fontStyle": undefined,
            "fontWeight": undefined,
            "letterSpacing": 0,
            "lineHeight": 26,
            "textAlign": "auto",
            "textDecorationLine": undefined,
          }
        }
      >
        Field name
      </Text>
    </View>
    <View
      accessibilityRole="button"
      accessible={true}
      collapsable={false}
      dataSet={Object {}}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "marginTop": 4,
        }
      }
    >
      <View
        dataSet={Object {}}
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "#fff",
            "borderColor": "#666666",
            "borderRadius": 3,
            "borderStyle": "solid",
            "borderWidth": 1,
            "display": "flex",
            "flexDirection": "row",
            "justifyContent": "space-between",
            "marginTop": 4,
            "overflow": "hidden",
          }
        }
      >
        <TextInput
          _text={
            Object {
              "color": "darkText",
            }
          }
          accessibilityDescribedBy="field-react-aria-1-feedback field-react-aria-1-helptext"
          accessible={true}
          allowFontScaling={true}
          aria-hidden={true}
          dataSet={Object {}}
          disabled={false}
          editable={false}
          focusable={false}
          importantForAccessibility="no"
          isDisabled={false}
          isRequired={false}
          nativeID="field-react-aria-1"
          onBlur={[Function]}
          onFocus={[Function]}
          onKeyPress={[Function]}
          placeholderTextColor="#a3a3a3"
          pointerEvents="none"
          readOnly={false}
          rejectResponderTermination={true}
          required={false}
          secureTextEntry={false}
          selectionColor="#1f2937"
          style={
            Array [
              Object {
                "backgroundColor": "transparent",
                "color": "#666666",
                "flex": 1,
                "fontFamily": "Roboto_400Regular",
                "fontSize": 18,
                "fontStyle": undefined,
                "fontWeight": undefined,
                "lineHeight": 26,
                "paddingBottom": 12,
                "paddingLeft": 12,
                "paddingRight": 12,
                "paddingTop": 12,
                "width": undefined,
              },
              Object {},
            ]
          }
          testID="single-select-field-input"
          underlineColorAndroid="transparent"
          variant="unstyled"
        />
        <RNSVGSvgView
          accessibilityRole="image"
          align="xMidYMid"
          bbHeight={24}
          bbWidth={24}
          color={4288914339}
          dataSet={Object {}}
          fill="currentColor"
          focusable={false}
          meetOrSlice={0}
          minX={0}
          minY={0}
          stroke=""
          style={
            Array [
              Object {
                "backgroundColor": "transparent",
                "borderWidth": 0,
              },
              Object {
                "color": "#a3a3a3",
                "height": 24,
                "paddingBottom": 4,
                "paddingLeft": 0,
                "paddingRight": 4,
                "paddingTop": 4,
                "width": 24,
              },
              Object {
                "flex": 0,
                "height": 24,
                "width": 24,
              },
            ]
          }
          tintColor={4288914339}
          vbHeight={24}
          vbWidth={24}
        >
          <RNSVGGroup
            fill={
              Array [
                2,
              ]
            }
            propList={
              Array [
                "fill",
                "stroke",
              ]
            }
            stroke={null}
          >
            <RNSVGGroup>
              <RNSVGGroup
                fill={
                  Array [
                    2,
                  ]
                }
                matrix={
                  Array [
                    6.123233995736766e-17,
                    1,
                    -1,
                    6.123233995736766e-17,
                    24,
                    0,
                  ]
                }
                propList={
                  Array [
                    "fill",
                    "stroke",
                  ]
                }
                stroke={null}
              >
                <RNSVGPath
                  d="M0,0H24V24H0Z"
                  fill={null}
                  propList={
                    Array [
                      "fill",
                    ]
                  }
                />
                <RNSVGPath
                  d="M10,6,8.59,7.41,13.17,12,8.59,16.59,10,18l6-6Z"
                />
              </RNSVGGroup>
            </RNSVGGroup>
          </RNSVGGroup>
        </RNSVGSvgView>
      </View>
    </View>
    <View
      dataSet={Object {}}
      feedbackId="field-react-aria-1-feedback"
      hasFeedbackText={true}
      hasHelpText={true}
      helpTextId="field-react-aria-1-helptext"
      isDisabled={false}
      isInvalid={false}
      isReadOnly={false}
      isRequired={false}
      labelId="field-react-aria-1-label"
      nativeID="field-react-aria-1-feedback"
      setHasFeedbackText={[Function]}
      setHasHelpText={[Function]}
      style={
        Object {
          "marginTop": 2,
        }
      }
    >
      <Text
        dataSet={Object {}}
        level="1"
        style={
          Object {
            "backgroundColor": undefined,
            "color": "#666666",
            "fontFamily": "Roboto_400Regular",
            "fontSize": 14,
            "fontStyle": undefined,
            "fontWeight": undefined,
            "letterSpacing": 0,
            "lineHeight": 20,
            "textAlign": "auto",
            "textDecorationLine": undefined,
          }
        }
      >
        Field description
      </Text>
    </View>
  </View>
  <View
    _text={
      Object {
        "color": "lightText",
      }
    }
    accessibilityRole="button"
    accessible={true}
    collapsable={false}
    colorScheme="primary"
    dataSet={Object {}}
    focusable={true}
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    onHoverIn={[Function]}
    onHoverOut={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#FF7602",
        "borderRadius": 3,
        "flexDirection": "row",
        "height": 50,
        "justifyContent": "center",
        "paddingBottom": 8,
        "paddingLeft": 50,
        "paddingRight": 50,
        "paddingTop": 8,
      }
    }
    testID="with-form-context-submit-button"
  >
    <View
      dataSet={Object {}}
      style={
        Object {
          "alignItems": "center",
          "flexDirection": "row",
        }
      }
    >
      <View
        dataSet={Object {}}
        style={Object {}}
      >
        <Text
          dataSet={Object {}}
          level="1"
          style={
            Object {
              "backgroundColor": undefined,
              "color": "#FFFFFF",
              "fontFamily": "Roboto_500Medium",
              "fontSize": 20,
              "fontStyle": undefined,
              "fontWeight": undefined,
              "letterSpacing": 0,
              "lineHeight": 24,
              "textAlign": "auto",
              "textDecorationLine": undefined,
            }
          }
        >
          Submit
        </Text>
      </View>
    </View>
  </View>
  <View
    collapsable={false}
    pointerEvents="box-none"
    style={
      Array [
        Object {
          "bottom": 0,
          "left": 0,
          "position": "absolute",
          "right": 0,
          "top": 0,
        },
        Object {
          "display": "flex",
          "overflow": "hidden",
        },
      ]
    }
  >
    <View
      pointerEvents="none"
      style={
        Object {
          "bottom": 0,
          "left": 0,
          "opacity": 0,
          "position": "absolute",
          "right": 0,
          "top": 0,
          "transform": Array [
            Object {
              "translateY": 0,
            },
            Object {
              "translateX": 0,
            },
            Object {
              "scale": 1,
            },
            Object {
              "scaleX": 1,
            },
            Object {
              "scaleY": 1,
            },
            Object {
              "rotate": "0deg",
            },
          ],
        }
      }
    >
      <View
        _text={
          Object {
            "color": "lightText",
          }
        }
        accessible={false}
        collapsable={false}
        dataSet={Object {}}
        focusable={true}
        importantForAccessibility="no"
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onHoverIn={[Function]}
        onHoverOut={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "backgroundColor": "rgb(0, 0, 0)",
            "bottom": 0,
            "left": 0,
            "opacity": 0.3,
            "position": "absolute",
            "right": 0,
            "top": 0,
          }
        }
      />
    </View>
    <View
      pointerEvents="none"
      style={
        Object {
          "bottom": 0,
          "height": "100%",
          "left": 0,
          "opacity": 1,
          "position": "absolute",
          "right": 0,
          "transform": Array [
            Object {
              "translateY": 0,
            },
            Object {
              "translateX": 0,
            },
            Object {
              "scale": 1,
            },
            Object {
              "scaleX": 1,
            },
            Object {
              "scaleY": 1,
            },
            Object {
              "rotate": "0deg",
            },
          ],
        }
      }
    >
      <View
        dataSet={Object {}}
        duration={200}
        in={false}
        onLayout={[Function]}
        overlay={false}
        pointerEvents="box-none"
        style={
          Object {
            "height": "100%",
            "opacity": 0,
          }
        }
      >
        <View
          closeOnOverlayClick={true}
          dataSet={Object {}}
          pointerEvents="box-none"
          style={
            Object {
              "alignItems": "center",
              "height": "100%",
              "justifyContent": "flex-end",
              "width": "100%",
            }
          }
        >
          <View
            onLayout={[Function]}
            pointerEvents="box-none"
            style={
              Object {
                "transform": Array [
                  Object {
                    "translateY": 0,
                  },
                ],
                "width": "100%",
              }
            }
          >
            <View
              collapsable={false}
              dataSet={Object {}}
              onMoveShouldSetResponder={[Function]}
              onMoveShouldSetResponderCapture={[Function]}
              onResponderEnd={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderReject={[Function]}
              onResponderRelease={[Function]}
              onResponderStart={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              onStartShouldSetResponderCapture={[Function]}
              style={
                Object {
                  "paddingBottom": 20,
                  "paddingTop": 20,
                }
              }
            />
            <View
              accessibilityViewIsModal={true}
              aria-modal="true"
              dataSet={Object {}}
              onAccessibilityEscape={[Function]}
              style={
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#f9fafb",
                  "borderRadius": 0,
                  "borderTopLeftRadius": 20,
                  "borderTopRightRadius": 20,
                  "elevation": 2,
                  "maxHeight": 1184,
                  "overflow": "hidden",
                  "paddingBottom": 8,
                  "paddingLeft": 8,
                  "paddingRight": 8,
                  "paddingTop": 8,
                  "shadowColor": "#000000",
                  "shadowOffset": Object {
                    "height": 1,
                    "width": 0,
                  },
                  "shadowOpacity": 0.2,
                  "shadowRadius": 1.41,
                  "width": "100%",
                }
              }
            >
              <View
                collapsable={false}
                dataSet={Object {}}
                onMoveShouldSetResponder={[Function]}
                onMoveShouldSetResponderCapture={[Function]}
                onResponderEnd={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderReject={[Function]}
                onResponderRelease={[Function]}
                onResponderStart={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                onStartShouldSetResponderCapture={[Function]}
                style={
                  Object {
                    "alignItems": "center",
                    "marginTop": -8,
                    "paddingBottom": 12,
                    "paddingTop": 12,
                    "width": "100%",
                  }
                }
              >
                <View
                  dataSet={Object {}}
                  style={
                    Object {
                      "backgroundColor": "#a1a1aa",
                      "borderRadius": 2,
                      "height": 4,
                      "width": 40,
                    }
                  }
                />
              </View>
              <RCTScrollView
                contentContainerStyle={
                  Array [
                    Object {},
                    Object {
                      "dataSet": Object {},
                    },
                  ]
                }
                data={
                  Array [
                    Object {
                      "label": "Option 1",
                      "testID": "single-select-field-input-option-0",
                      "value": "option-id-1",
                    },
                    Object {
                      "label": "Option 2",
                      "testID": "single-select-field-input-option-1",
                      "value": "option-id-2",
                    },
                    Object {
                      "label": "Option 3",
                      "testID": "single-select-field-input-option-2",
                      "value": "option-id-3",
                    },
                  ]
                }
                dataSet={Object {}}
                disableVirtualization={false}
                getItem={[Function]}
                getItemCount={[Function]}
                horizontal={false}
                initialNumToRender={10}
                keyExtractor={[Function]}
                maxToRenderPerBatch={10}
                onContentSizeChange={[Function]}
                onEndReachedThreshold={2}
                onLayout={[Function]}
                onMomentumScrollEnd={[Function]}
                onScroll={[Function]}
                onScrollBeginDrag={[Function]}
                onScrollEndDrag={[Function]}
                removeClippedSubviews={false}
                renderItem={[Function]}
                scrollEventThrottle={50}
                stickyHeaderIndices={Array []}
                style={
                  Object {
                    "width": "100%",
                  }
                }
                updateCellsBatchingPeriod={50}
                viewabilityConfigCallbackPairs={Array []}
                windowSize={21}
              >
                <View>
                  <View
                    onLayout={[Function]}
                    style={null}
                  >
                    <View
                      accessibilityRole="button"
                      accessibilityState={
                        Object {
                          "selected": false,
                        }
                      }
                      accessible={true}
                      collapsable={false}
                      colorScheme="primary"
                      dataSet={Object {}}
                      focusable={true}
                      label="Option 1"
                      onBlur={[Function]}
                      onClick={[Function]}
                      onFocus={[Function]}
                      onHoverIn={[Function]}
                      onHoverOut={[Function]}
                      onResponderGrant={[Function]}
                      onResponderMove={[Function]}
                      onResponderRelease={[Function]}
                      onResponderTerminate={[Function]}
                      onResponderTerminationRequest={[Function]}
                      onStartShouldSetResponder={[Function]}
                      style={
                        Object {
                          "alignItems": "center",
                          "borderRadius": 3,
                          "flexDirection": "row",
                          "height": 50,
                          "justifyContent": "flex-start",
                          "paddingBottom": 16,
                          "paddingLeft": 16,
                          "paddingRight": 16,
                          "paddingTop": 16,
                          "width": "100%",
                        }
                      }
                      testID="single-select-field-input-option-0"
                      value="option-id-1"
                    >
                      <View
                        dataSet={Object {}}
                        style={
                          Object {
                            "alignItems": "center",
                            "flexDirection": "row",
                          }
                        }
                      >
                        <View
                          dataSet={Object {}}
                          style={Object {}}
                        >
                          <Text
                            dataSet={Object {}}
                            level="1"
                            style={
                              Object {
                                "backgroundColor": undefined,
                                "color": "#1f2937",
                                "fontFamily": "Roboto_400Regular",
                                "fontSize": 16,
                                "fontStyle": undefined,
                                "fontWeight": undefined,
                                "letterSpacing": 0,
                                "lineHeight": 24,
                                "textAlign": "auto",
                                "textDecorationLine": undefined,
                              }
                            }
                          >
                            Option 1
                          </Text>
                        </View>
                      </View>
                    </View>
                  </View>
                  <View
                    onLayout={[Function]}
                    style={null}
                  >
                    <View
                      accessibilityRole="button"
                      accessibilityState={
                        Object {
                          "selected": false,
                        }
                      }
                      accessible={true}
                      collapsable={false}
                      colorScheme="primary"
                      dataSet={Object {}}
                      focusable={true}
                      label="Option 2"
                      onBlur={[Function]}
                      onClick={[Function]}
                      onFocus={[Function]}
                      onHoverIn={[Function]}
                      onHoverOut={[Function]}
                      onResponderGrant={[Function]}
                      onResponderMove={[Function]}
                      onResponderRelease={[Function]}
                      onResponderTerminate={[Function]}
                      onResponderTerminationRequest={[Function]}
                      onStartShouldSetResponder={[Function]}
                      style={
                        Object {
                          "alignItems": "center",
                          "borderRadius": 3,
                          "flexDirection": "row",
                          "height": 50,
                          "justifyContent": "flex-start",
                          "paddingBottom": 16,
                          "paddingLeft": 16,
                          "paddingRight": 16,
                          "paddingTop": 16,
                          "width": "100%",
                        }
                      }
                      testID="single-select-field-input-option-1"
                      value="option-id-2"
                    >
                      <View
                        dataSet={Object {}}
                        style={
                          Object {
                            "alignItems": "center",
                            "flexDirection": "row",
                          }
                        }
                      >
                        <View
                          dataSet={Object {}}
                          style={Object {}}
                        >
                          <Text
                            dataSet={Object {}}
                            level="1"
                            style={
                              Object {
                                "backgroundColor": undefined,
                                "color": "#1f2937",
                                "fontFamily": "Roboto_400Regular",
                                "fontSize": 16,
                                "fontStyle": undefined,
                                "fontWeight": undefined,
                                "letterSpacing": 0,
                                "lineHeight": 24,
                                "textAlign": "auto",
                                "textDecorationLine": undefined,
                              }
                            }
                          >
                            Option 2
                          </Text>
                        </View>
                      </View>
                    </View>
                  </View>
                  <View
                    onLayout={[Function]}
                    style={null}
                  >
                    <View
                      accessibilityRole="button"
                      accessibilityState={
                        Object {
                          "selected": false,
                        }
                      }
                      accessible={true}
                      collapsable={false}
                      colorScheme="primary"
                      dataSet={Object {}}
                      focusable={true}
                      label="Option 3"
                      onBlur={[Function]}
                      onClick={[Function]}
                      onFocus={[Function]}
                      onHoverIn={[Function]}
                      onHoverOut={[Function]}
                      onResponderGrant={[Function]}
                      onResponderMove={[Function]}
                      onResponderRelease={[Function]}
                      onResponderTerminate={[Function]}
                      onResponderTerminationRequest={[Function]}
                      onStartShouldSetResponder={[Function]}
                      style={
                        Object {
                          "alignItems": "center",
                          "borderRadius": 3,
                          "flexDirection": "row",
                          "height": 50,
                          "justifyContent": "flex-start",
                          "paddingBottom": 16,
                          "paddingLeft": 16,
                          "paddingRight": 16,
                          "paddingTop": 16,
                          "width": "100%",
                        }
                      }
                      testID="single-select-field-input-option-2"
                      value="option-id-3"
                    >
                      <View
                        dataSet={Object {}}
                        style={
                          Object {
                            "alignItems": "center",
                            "flexDirection": "row",
                          }
                        }
                      >
                        <View
                          dataSet={Object {}}
                          style={Object {}}
                        >
                          <Text
                            dataSet={Object {}}
                            level="1"
                            style={
                              Object {
                                "backgroundColor": undefined,
                                "color": "#1f2937",
                                "fontFamily": "Roboto_400Regular",
                                "fontSize": 16,
                                "fontStyle": undefined,
                                "fontWeight": undefined,
                                "letterSpacing": 0,
                                "lineHeight": 24,
                                "textAlign": "auto",
                                "textDecorationLine": undefined,
                              }
                            }
                          >
                            Option 3
                          </Text>
                        </View>
                      </View>
                    </View>
                  </View>
                </View>
              </RCTScrollView>
            </View>
          </View>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`should match the snapshot selected value 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    dataSet={Object {}}
    isInvalid={false}
    isRequired={false}
    style={
      Object {
        "width": "100%",
      }
    }
  >
    <View
      dataSet={Object {}}
      feedbackId="field-react-aria-1-feedback"
      hasFeedbackText={true}
      hasHelpText={true}
      helpTextId="field-react-aria-1-helptext"
      isDisabled={false}
      isInvalid={false}
      isReadOnly={false}
      isRequired={false}
      labelId="field-react-aria-1-label"
      nativeID="field-react-aria-1-label"
      setHasFeedbackText={[Function]}
      setHasHelpText={[Function]}
      style={
        Object {
          "flexDirection": "row",
          "justifyContent": "flex-start",
          "marginBottom": 2,
          "marginRight": 12,
        }
      }
    >
      <Text
        dataSet={Object {}}
        level="1"
        style={
          Object {
            "backgroundColor": undefined,
            "color": "#666666",
            "fontFamily": "Roboto_500Medium",
            "fontSize": 18,
            "fontStyle": undefined,
            "fontWeight": undefined,
            "letterSpacing": 0,
            "lineHeight": 26,
            "textAlign": "auto",
            "textDecorationLine": undefined,
          }
        }
      >
        Field name
      </Text>
    </View>
    <View
      accessibilityRole="button"
      accessible={true}
      collapsable={false}
      dataSet={Object {}}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "marginTop": 4,
        }
      }
    >
      <View
        dataSet={Object {}}
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "#fff",
            "borderColor": "#666666",
            "borderRadius": 3,
            "borderStyle": "solid",
            "borderWidth": 1,
            "display": "flex",
            "flexDirection": "row",
            "justifyContent": "space-between",
            "marginTop": 4,
            "overflow": "hidden",
          }
        }
      >
        <TextInput
          _text={
            Object {
              "color": "darkText",
            }
          }
          accessibilityDescribedBy="field-react-aria-1-feedback field-react-aria-1-helptext"
          accessible={true}
          allowFontScaling={true}
          aria-hidden={true}
          dataSet={Object {}}
          disabled={false}
          editable={false}
          focusable={false}
          importantForAccessibility="no"
          isDisabled={false}
          isRequired={false}
          nativeID="field-react-aria-1"
          onBlur={[Function]}
          onFocus={[Function]}
          onKeyPress={[Function]}
          placeholderTextColor="#a3a3a3"
          pointerEvents="none"
          readOnly={false}
          rejectResponderTermination={true}
          required={false}
          secureTextEntry={false}
          selectionColor="#1f2937"
          style={
            Array [
              Object {
                "backgroundColor": "transparent",
                "color": "#666666",
                "flex": 1,
                "fontFamily": "Roboto_400Regular",
                "fontSize": 18,
                "fontStyle": undefined,
                "fontWeight": undefined,
                "lineHeight": 26,
                "paddingBottom": 12,
                "paddingLeft": 12,
                "paddingRight": 12,
                "paddingTop": 12,
                "width": undefined,
              },
              Object {},
            ]
          }
          testID="single-select-field-input"
          underlineColorAndroid="transparent"
          value="Option 2"
          variant="unstyled"
        />
        <RNSVGSvgView
          accessibilityRole="image"
          align="xMidYMid"
          bbHeight={24}
          bbWidth={24}
          color={4288914339}
          dataSet={Object {}}
          fill="currentColor"
          focusable={false}
          meetOrSlice={0}
          minX={0}
          minY={0}
          stroke=""
          style={
            Array [
              Object {
                "backgroundColor": "transparent",
                "borderWidth": 0,
              },
              Object {
                "color": "#a3a3a3",
                "height": 24,
                "paddingBottom": 4,
                "paddingLeft": 0,
                "paddingRight": 4,
                "paddingTop": 4,
                "width": 24,
              },
              Object {
                "flex": 0,
                "height": 24,
                "width": 24,
              },
            ]
          }
          tintColor={4288914339}
          vbHeight={24}
          vbWidth={24}
        >
          <RNSVGGroup
            fill={
              Array [
                2,
              ]
            }
            propList={
              Array [
                "fill",
                "stroke",
              ]
            }
            stroke={null}
          >
            <RNSVGGroup>
              <RNSVGGroup
                fill={
                  Array [
                    2,
                  ]
                }
                matrix={
                  Array [
                    6.123233995736766e-17,
                    1,
                    -1,
                    6.123233995736766e-17,
                    24,
                    0,
                  ]
                }
                propList={
                  Array [
                    "fill",
                    "stroke",
                  ]
                }
                stroke={null}
              >
                <RNSVGPath
                  d="M0,0H24V24H0Z"
                  fill={null}
                  propList={
                    Array [
                      "fill",
                    ]
                  }
                />
                <RNSVGPath
                  d="M10,6,8.59,7.41,13.17,12,8.59,16.59,10,18l6-6Z"
                />
              </RNSVGGroup>
            </RNSVGGroup>
          </RNSVGGroup>
        </RNSVGSvgView>
      </View>
    </View>
    <View
      dataSet={Object {}}
      feedbackId="field-react-aria-1-feedback"
      hasFeedbackText={true}
      hasHelpText={true}
      helpTextId="field-react-aria-1-helptext"
      isDisabled={false}
      isInvalid={false}
      isReadOnly={false}
      isRequired={false}
      labelId="field-react-aria-1-label"
      nativeID="field-react-aria-1-feedback"
      setHasFeedbackText={[Function]}
      setHasHelpText={[Function]}
      style={
        Object {
          "marginTop": 2,
        }
      }
    >
      <Text
        dataSet={Object {}}
        level="1"
        style={
          Object {
            "backgroundColor": undefined,
            "color": "#666666",
            "fontFamily": "Roboto_400Regular",
            "fontSize": 14,
            "fontStyle": undefined,
            "fontWeight": undefined,
            "letterSpacing": 0,
            "lineHeight": 20,
            "textAlign": "auto",
            "textDecorationLine": undefined,
          }
        }
      >
        Field description
      </Text>
    </View>
  </View>
  <View
    _text={
      Object {
        "color": "lightText",
      }
    }
    accessibilityRole="button"
    accessible={true}
    collapsable={false}
    colorScheme="primary"
    dataSet={Object {}}
    focusable={true}
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    onHoverIn={[Function]}
    onHoverOut={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#FF7602",
        "borderRadius": 3,
        "flexDirection": "row",
        "height": 50,
        "justifyContent": "center",
        "paddingBottom": 8,
        "paddingLeft": 50,
        "paddingRight": 50,
        "paddingTop": 8,
      }
    }
    testID="with-form-context-submit-button"
  >
    <View
      dataSet={Object {}}
      style={
        Object {
          "alignItems": "center",
          "flexDirection": "row",
        }
      }
    >
      <View
        dataSet={Object {}}
        style={Object {}}
      >
        <Text
          dataSet={Object {}}
          level="1"
          style={
            Object {
              "backgroundColor": undefined,
              "color": "#FFFFFF",
              "fontFamily": "Roboto_500Medium",
              "fontSize": 20,
              "fontStyle": undefined,
              "fontWeight": undefined,
              "letterSpacing": 0,
              "lineHeight": 24,
              "textAlign": "auto",
              "textDecorationLine": undefined,
            }
          }
        >
          Submit
        </Text>
      </View>
    </View>
  </View>
  <View
    collapsable={false}
    pointerEvents="box-none"
    style={
      Array [
        Object {
          "bottom": 0,
          "left": 0,
          "position": "absolute",
          "right": 0,
          "top": 0,
        },
        Object {
          "display": "flex",
          "overflow": "hidden",
        },
      ]
    }
  >
    <View
      pointerEvents="none"
      style={
        Object {
          "bottom": 0,
          "left": 0,
          "opacity": 0,
          "position": "absolute",
          "right": 0,
          "top": 0,
          "transform": Array [
            Object {
              "translateY": 0,
            },
            Object {
              "translateX": 0,
            },
            Object {
              "scale": 1,
            },
            Object {
              "scaleX": 1,
            },
            Object {
              "scaleY": 1,
            },
            Object {
              "rotate": "0deg",
            },
          ],
        }
      }
    >
      <View
        _text={
          Object {
            "color": "lightText",
          }
        }
        accessible={false}
        collapsable={false}
        dataSet={Object {}}
        focusable={true}
        importantForAccessibility="no"
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onHoverIn={[Function]}
        onHoverOut={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "backgroundColor": "rgb(0, 0, 0)",
            "bottom": 0,
            "left": 0,
            "opacity": 0.3,
            "position": "absolute",
            "right": 0,
            "top": 0,
          }
        }
      />
    </View>
    <View
      pointerEvents="none"
      style={
        Object {
          "bottom": 0,
          "height": "100%",
          "left": 0,
          "opacity": 1,
          "position": "absolute",
          "right": 0,
          "transform": Array [
            Object {
              "translateY": 0,
            },
            Object {
              "translateX": 0,
            },
            Object {
              "scale": 1,
            },
            Object {
              "scaleX": 1,
            },
            Object {
              "scaleY": 1,
            },
            Object {
              "rotate": "0deg",
            },
          ],
        }
      }
    >
      <View
        dataSet={Object {}}
        duration={200}
        in={false}
        onLayout={[Function]}
        overlay={false}
        pointerEvents="box-none"
        style={
          Object {
            "height": "100%",
            "opacity": 0,
          }
        }
      >
        <View
          closeOnOverlayClick={true}
          dataSet={Object {}}
          pointerEvents="box-none"
          style={
            Object {
              "alignItems": "center",
              "height": "100%",
              "justifyContent": "flex-end",
              "width": "100%",
            }
          }
        >
          <View
            onLayout={[Function]}
            pointerEvents="box-none"
            style={
              Object {
                "transform": Array [
                  Object {
                    "translateY": 0,
                  },
                ],
                "width": "100%",
              }
            }
          >
            <View
              collapsable={false}
              dataSet={Object {}}
              onMoveShouldSetResponder={[Function]}
              onMoveShouldSetResponderCapture={[Function]}
              onResponderEnd={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderReject={[Function]}
              onResponderRelease={[Function]}
              onResponderStart={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              onStartShouldSetResponderCapture={[Function]}
              style={
                Object {
                  "paddingBottom": 20,
                  "paddingTop": 20,
                }
              }
            />
            <View
              accessibilityViewIsModal={true}
              aria-modal="true"
              dataSet={Object {}}
              onAccessibilityEscape={[Function]}
              style={
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#f9fafb",
                  "borderRadius": 0,
                  "borderTopLeftRadius": 20,
                  "borderTopRightRadius": 20,
                  "elevation": 2,
                  "maxHeight": 1184,
                  "overflow": "hidden",
                  "paddingBottom": 8,
                  "paddingLeft": 8,
                  "paddingRight": 8,
                  "paddingTop": 8,
                  "shadowColor": "#000000",
                  "shadowOffset": Object {
                    "height": 1,
                    "width": 0,
                  },
                  "shadowOpacity": 0.2,
                  "shadowRadius": 1.41,
                  "width": "100%",
                }
              }
            >
              <View
                collapsable={false}
                dataSet={Object {}}
                onMoveShouldSetResponder={[Function]}
                onMoveShouldSetResponderCapture={[Function]}
                onResponderEnd={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderReject={[Function]}
                onResponderRelease={[Function]}
                onResponderStart={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                onStartShouldSetResponderCapture={[Function]}
                style={
                  Object {
                    "alignItems": "center",
                    "marginTop": -8,
                    "paddingBottom": 12,
                    "paddingTop": 12,
                    "width": "100%",
                  }
                }
              >
                <View
                  dataSet={Object {}}
                  style={
                    Object {
                      "backgroundColor": "#a1a1aa",
                      "borderRadius": 2,
                      "height": 4,
                      "width": 40,
                    }
                  }
                />
              </View>
              <RCTScrollView
                contentContainerStyle={
                  Array [
                    Object {},
                    Object {
                      "dataSet": Object {},
                    },
                  ]
                }
                data={
                  Array [
                    Object {
                      "label": "Option 1",
                      "testID": "single-select-field-input-option-0",
                      "value": "option-id-1",
                    },
                    Object {
                      "label": "Option 2",
                      "testID": "single-select-field-input-option-1",
                      "value": "option-id-2",
                    },
                    Object {
                      "label": "Option 3",
                      "testID": "single-select-field-input-option-2",
                      "value": "option-id-3",
                    },
                  ]
                }
                dataSet={Object {}}
                disableVirtualization={false}
                getItem={[Function]}
                getItemCount={[Function]}
                horizontal={false}
                initialNumToRender={10}
                keyExtractor={[Function]}
                maxToRenderPerBatch={10}
                onContentSizeChange={[Function]}
                onEndReachedThreshold={2}
                onLayout={[Function]}
                onMomentumScrollEnd={[Function]}
                onScroll={[Function]}
                onScrollBeginDrag={[Function]}
                onScrollEndDrag={[Function]}
                removeClippedSubviews={false}
                renderItem={[Function]}
                scrollEventThrottle={50}
                stickyHeaderIndices={Array []}
                style={
                  Object {
                    "width": "100%",
                  }
                }
                updateCellsBatchingPeriod={50}
                viewabilityConfigCallbackPairs={Array []}
                windowSize={21}
              >
                <View>
                  <View
                    onLayout={[Function]}
                    style={null}
                  >
                    <View
                      accessibilityRole="button"
                      accessibilityState={
                        Object {
                          "selected": false,
                        }
                      }
                      accessible={true}
                      collapsable={false}
                      colorScheme="primary"
                      dataSet={Object {}}
                      focusable={true}
                      label="Option 1"
                      onBlur={[Function]}
                      onClick={[Function]}
                      onFocus={[Function]}
                      onHoverIn={[Function]}
                      onHoverOut={[Function]}
                      onResponderGrant={[Function]}
                      onResponderMove={[Function]}
                      onResponderRelease={[Function]}
                      onResponderTerminate={[Function]}
                      onResponderTerminationRequest={[Function]}
                      onStartShouldSetResponder={[Function]}
                      style={
                        Object {
                          "alignItems": "center",
                          "borderRadius": 3,
                          "flexDirection": "row",
                          "height": 50,
                          "justifyContent": "flex-start",
                          "paddingBottom": 16,
                          "paddingLeft": 16,
                          "paddingRight": 16,
                          "paddingTop": 16,
                          "width": "100%",
                        }
                      }
                      testID="single-select-field-input-option-0"
                      value="option-id-1"
                    >
                      <View
                        dataSet={Object {}}
                        style={
                          Object {
                            "alignItems": "center",
                            "flexDirection": "row",
                          }
                        }
                      >
                        <View
                          dataSet={Object {}}
                          style={Object {}}
                        >
                          <Text
                            dataSet={Object {}}
                            level="1"
                            style={
                              Object {
                                "backgroundColor": undefined,
                                "color": "#1f2937",
                                "fontFamily": "Roboto_400Regular",
                                "fontSize": 16,
                                "fontStyle": undefined,
                                "fontWeight": undefined,
                                "letterSpacing": 0,
                                "lineHeight": 24,
                                "textAlign": "auto",
                                "textDecorationLine": undefined,
                              }
                            }
                          >
                            Option 1
                          </Text>
                        </View>
                      </View>
                    </View>
                  </View>
                  <View
                    onLayout={[Function]}
                    style={null}
                  >
                    <View
                      accessibilityRole="button"
                      accessibilityState={
                        Object {
                          "selected": true,
                        }
                      }
                      accessible={true}
                      collapsable={false}
                      colorScheme="primary"
                      dataSet={Object {}}
                      focusable={true}
                      label="Option 2"
                      onBlur={[Function]}
                      onClick={[Function]}
                      onFocus={[Function]}
                      onHoverIn={[Function]}
                      onHoverOut={[Function]}
                      onResponderGrant={[Function]}
                      onResponderMove={[Function]}
                      onResponderRelease={[Function]}
                      onResponderTerminate={[Function]}
                      onResponderTerminationRequest={[Function]}
                      onStartShouldSetResponder={[Function]}
                      style={
                        Object {
                          "alignItems": "center",
                          "borderRadius": 3,
                          "flexDirection": "row",
                          "height": 50,
                          "justifyContent": "flex-start",
                          "paddingBottom": 16,
                          "paddingLeft": 16,
                          "paddingRight": 16,
                          "paddingTop": 16,
                          "width": "100%",
                        }
                      }
                      testID="single-select-field-input-option-1"
                      value="option-id-2"
                    >
                      <View
                        dataSet={Object {}}
                        style={
                          Object {
                            "alignItems": "center",
                            "flexDirection": "row",
                          }
                        }
                      >
                        <View
                          dataSet={Object {}}
                          style={Object {}}
                        >
                          <Text
                            dataSet={Object {}}
                            level="1"
                            style={
                              Object {
                                "backgroundColor": undefined,
                                "color": "#1f2937",
                                "fontFamily": "Roboto_400Regular",
                                "fontSize": 16,
                                "fontStyle": undefined,
                                "fontWeight": undefined,
                                "letterSpacing": 0,
                                "lineHeight": 24,
                                "textAlign": "auto",
                                "textDecorationLine": undefined,
                              }
                            }
                          >
                            Option 2
                          </Text>
                        </View>
                      </View>
                    </View>
                  </View>
                  <View
                    onLayout={[Function]}
                    style={null}
                  >
                    <View
                      accessibilityRole="button"
                      accessibilityState={
                        Object {
                          "selected": false,
                        }
                      }
                      accessible={true}
                      collapsable={false}
                      colorScheme="primary"
                      dataSet={Object {}}
                      focusable={true}
                      label="Option 3"
                      onBlur={[Function]}
                      onClick={[Function]}
                      onFocus={[Function]}
                      onHoverIn={[Function]}
                      onHoverOut={[Function]}
                      onResponderGrant={[Function]}
                      onResponderMove={[Function]}
                      onResponderRelease={[Function]}
                      onResponderTerminate={[Function]}
                      onResponderTerminationRequest={[Function]}
                      onStartShouldSetResponder={[Function]}
                      style={
                        Object {
                          "alignItems": "center",
                          "borderRadius": 3,
                          "flexDirection": "row",
                          "height": 50,
                          "justifyContent": "flex-start",
                          "paddingBottom": 16,
                          "paddingLeft": 16,
                          "paddingRight": 16,
                          "paddingTop": 16,
                          "width": "100%",
                        }
                      }
                      testID="single-select-field-input-option-2"
                      value="option-id-3"
                    >
                      <View
                        dataSet={Object {}}
                        style={
                          Object {
                            "alignItems": "center",
                            "flexDirection": "row",
                          }
                        }
                      >
                        <View
                          dataSet={Object {}}
                          style={Object {}}
                        >
                          <Text
                            dataSet={Object {}}
                            level="1"
                            style={
                              Object {
                                "backgroundColor": undefined,
                                "color": "#1f2937",
                                "fontFamily": "Roboto_400Regular",
                                "fontSize": 16,
                                "fontStyle": undefined,
                                "fontWeight": undefined,
                                "letterSpacing": 0,
                                "lineHeight": 24,
                                "textAlign": "auto",
                                "textDecorationLine": undefined,
                              }
                            }
                          >
                            Option 3
                          </Text>
                        </View>
                      </View>
                    </View>
                  </View>
                </View>
              </RCTScrollView>
            </View>
          </View>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;
