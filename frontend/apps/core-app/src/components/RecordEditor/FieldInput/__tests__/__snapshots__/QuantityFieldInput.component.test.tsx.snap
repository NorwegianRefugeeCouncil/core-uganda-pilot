// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`should match the snapshot 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    dataSet={Object {}}
    isInvalid={false}
    isRequired={false}
    style={
      Object {
        "width": "100%",
      }
    }
  >
    <View
      dataSet={Object {}}
      feedbackId="field-react-aria-1-feedback"
      hasFeedbackText={true}
      hasHelpText={true}
      helpTextId="field-react-aria-1-helptext"
      isDisabled={false}
      isInvalid={false}
      isReadOnly={false}
      isRequired={false}
      labelId="field-react-aria-1-label"
      nativeID="field-react-aria-1-label"
      setHasFeedbackText={[Function]}
      setHasHelpText={[Function]}
      style={
        Object {
          "flexDirection": "row",
          "justifyContent": "flex-start",
          "marginBottom": 2,
          "marginRight": 12,
        }
      }
    >
      <Text
        dataSet={Object {}}
        level="1"
        style={
          Object {
            "backgroundColor": undefined,
            "color": "#666666",
            "fontFamily": "Roboto_500Medium",
            "fontSize": 18,
            "fontStyle": undefined,
            "fontWeight": undefined,
            "letterSpacing": 0,
            "lineHeight": 26,
            "textAlign": "auto",
            "textDecorationLine": undefined,
          }
        }
      >
        Field name
      </Text>
    </View>
    <TextInput
      _text={
        Object {
          "color": "darkText",
        }
      }
      accessibilityDescribedBy="field-react-aria-1-feedback field-react-aria-1-helptext"
      accessible={true}
      allowFontScaling={true}
      autoCompleteType="off"
      dataSet={Object {}}
      disabled={false}
      editable={true}
      isRequired={false}
      nativeID="field-react-aria-1"
      onBlur={[Function]}
      onChangeText={[Function]}
      onFocus={[Function]}
      onKeyPress={[Function]}
      placeholderTextColor="#a3a3a3"
      readOnly={false}
      rejectResponderTermination={true}
      required={false}
      secureTextEntry={false}
      selectionColor="#1f2937"
      style={
        Array [
          Object {
            "backgroundColor": "#fff",
            "borderColor": "#666666",
            "borderRadius": 3,
            "borderStyle": "solid",
            "borderWidth": 1,
            "color": "#666666",
            "fontFamily": "Roboto_400Regular",
            "fontSize": 18,
            "fontStyle": undefined,
            "fontWeight": undefined,
            "lineHeight": 26,
            "overflow": "hidden",
            "paddingBottom": 12,
            "paddingLeft": 12,
            "paddingRight": 12,
            "paddingTop": 12,
            "width": undefined,
          },
          Object {},
        ]
      }
      testID="quantity-field-input"
      underlineColorAndroid="transparent"
      value="an input value"
    />
    <View
      dataSet={Object {}}
      feedbackId="field-react-aria-1-feedback"
      hasFeedbackText={true}
      hasHelpText={true}
      helpTextId="field-react-aria-1-helptext"
      isDisabled={false}
      isInvalid={false}
      isReadOnly={false}
      isRequired={false}
      labelId="field-react-aria-1-label"
      nativeID="field-react-aria-1-feedback"
      setHasFeedbackText={[Function]}
      setHasHelpText={[Function]}
      style={
        Object {
          "marginTop": 2,
        }
      }
    >
      <Text
        dataSet={Object {}}
        level="1"
        style={
          Object {
            "backgroundColor": undefined,
            "color": "#666666",
            "fontFamily": "Roboto_400Regular",
            "fontSize": 14,
            "fontStyle": undefined,
            "fontWeight": undefined,
            "letterSpacing": 0,
            "lineHeight": 20,
            "textAlign": "auto",
            "textDecorationLine": undefined,
          }
        }
      >
        Field description
      </Text>
    </View>
  </View>
  <View
    _text={
      Object {
        "color": "lightText",
      }
    }
    accessibilityRole="button"
    accessible={true}
    collapsable={false}
    colorScheme="primary"
    dataSet={Object {}}
    focusable={true}
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    onHoverIn={[Function]}
    onHoverOut={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#FF7602",
        "borderRadius": 3,
        "flexDirection": "row",
        "height": "nrc_10",
        "justifyContent": "center",
        "paddingBottom": 8,
        "paddingLeft": "nrc_10",
        "paddingRight": "nrc_10",
        "paddingTop": 8,
      }
    }
    testID="with-form-context-submit-button"
  >
    <View
      dataSet={Object {}}
      style={
        Object {
          "alignItems": "center",
          "flexDirection": "row",
        }
      }
    >
      <View
        dataSet={Object {}}
        style={Object {}}
      >
        <Text
          dataSet={Object {}}
          level="1"
          style={
            Object {
              "backgroundColor": undefined,
              "color": "#FFFFFF",
              "fontFamily": "Roboto_500Medium",
              "fontSize": 20,
              "fontStyle": undefined,
              "fontWeight": undefined,
              "letterSpacing": 0,
              "lineHeight": 24,
              "textAlign": "auto",
              "textDecorationLine": undefined,
            }
          }
        >
          Submit
        </Text>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;
