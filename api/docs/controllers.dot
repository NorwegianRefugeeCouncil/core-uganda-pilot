digraph A {

    label="Illustrates the controller loop\nand how the controllers can subscribe (watch)\nto the live change event stream whenever\nan API resource is added/modified/deleted"

    subgraph cluster_0 {
    style=filled;
    color=lightgrey;
    node [style=filled,color=white];
    cache [label="local cache"]
    loop [label="reconciliation loop\nruns until the\nserver is stopped"]
    queue [label="queue\nenqueues items to\nbe processed.\nfed by the informers"]
    informer -> cache
    informer -> lister
    lister -> cache
    informer -> queue
    loop -> loop
    loop -> queue
    label = "controller";
    }

    subgraph cluster_1 {
    style=filled;
    color=lightgrey;
    node [style=filled,color=white];
    restHandler [label="restHandler\nupgrades the connection\nto websocket"]
    watcher [label="watcher\nsubscribes to events.\nperform serialization\nsends through websockets"]
    mongoStore [label="mongoStore\nreplays previous events.\nsubscribes to ChangeStream"]
    apiServer -> restHandler -> watcher -> mongoStore -> mongoDB
    mongoDB -> mongoStore [label="ChangeStream"]
    label = "api";
    }

    lister -> apiServer [label="lists api resources"]
    informer -> apiServer [label="watches live changes to API resources"]
}