{{define "reporting"}}
    <!doctype html>
    <html lang="en">
    {{template "head"}}
    <link href="https://cdn.webdatarocks.com/1.3.1/webdatarocks.min.css" rel="stylesheet" />

    <style>
        .attribute {
            transition: all ease-in-out 0.2s;
        }

        .attribute:hover {
            box-shadow: 0 .125rem .25rem rgba(11, 94, 215, 0.2) !important;
            border-color: rgba(13, 110, 253, 1);
        }

        #chartContainer {
            margin-top: 30px;
            width: 100%;
            height: 500px;
        }
    </style>


    <body class="bg-light">

    {{template "navbar"}}

    <div class="container mt-4">
        <div class="row">
            <div class="col">
                <div id="pivotContainer"></div>
                <!--<div id="chartContainer"></div>-->
            </div>
        </div>
    </div>

    <script src="https://cdn.webdatarocks.com/1.3.1/webdatarocks.toolbar.min.js"></script>
    <script src="https://cdn.webdatarocks.com/1.3.1/webdatarocks.js"></script>
    <script src="https://cdn.webdatarocks.com/1.3.1/webdatarocks.amcharts.js"></script>
    <script src="https://www.amcharts.com/lib/4/core.js"></script>
    <script src="https://www.amcharts.com/lib/4/charts.js"></script>
    <script src="https://www.amcharts.com/lib/4/themes/animated.js"></script>

    <script>
        const parseData = (individuals, cases, caseTypes) => {

            // create a map of caseTypeId => name
            const caseTypeLabelMap = {}
            caseTypes.forEach(caseType => {
                caseTypeLabelMap[caseType["id"]] = caseType["name"]
            })

            const returnData = [];
            individuals.forEach(individual => {
                if (individual['partyTypeIds'].includes("{{.BeneficiaryPartyTypeID}}")) {

                    let individualCases = []

                    cases.forEach(kase => {
                        if (kase["partyId"] === individual["id"]) {
                            individualCases.push({
                                'status': kase['done'],
                                'name': caseTypeLabelMap[kase['caseTypeId']]
                            })
                        }
                    })

                    returnData.push({
                        id: individual["id"],
                        displacementStatus: individual['attributes']["{{.DisplacementStatusAttributeID}}"][0],
                        gender: individual['attributes']["{{.GenderAttributeID}}"][0],
                        birthDate: individual['attributes']["{{.BirthDateAttributeID}}"][0],
                        cases: individualCases,
                    });
                }
            });
            return returnData;
        };
        var pivot = new WebDataRocks({
            container: '#pivotContainer',
            toolbar: false,
            height: 580,
            width: '100%',
            report: {
                'dataSource': {
                    'dataSourceType': 'json',
                    'data': parseData({{.Individuals.Items}}, {{.Cases.Items}}, {{.CaseTypes.Items}}),
                },
                'options': {
                    'grid': {
                        'title': 'Beneficiary Pivot Table'
                    }
                },
            },
        });
        console.log(JSON.stringify(parseData({{.Individuals.Items}}, {{.Cases.Items}}, {{.CaseTypes.Items}}), null, 3));
    </script>

    </body>
    </html>
{{end}}
