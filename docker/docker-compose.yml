version: '3.4'

services:
  eventstore.db:
    image: eventstore/eventstore:21.2.0-buster-slim
    environment:
      - EVENTSTORE_CLUSTER_SIZE=1
      - EVENTSTORE_RUN_PROJECTIONS=All
      - EVENTSTORE_START_STANDARD_PROJECTIONS=true
      - EVENTSTORE_EXT_TCP_PORT=1113
      - EVENTSTORE_EXT_HTTP_PORT=2113
      - EVENTSTORE_INSECURE=true
      - EVENTSTORE_ENABLE_EXTERNAL_TCP=true
      - EVENTSTORE_ENABLE_ATOM_PUB_OVER_HTTP=true
    ports:
      - "1113:1113"
      - "2113:2113"
    volumes:
      - type: volume
        source: eventstore-volume-data
        target: /var/lib/eventstore
      - type: volume
        source: eventstore-volume-logs
        target: /var/log/eventstore

  mongo1:
    image: mongo:latest
    container_name: mongo1
    command: [ "--replSet", "my-replica-set", "--bind_ip_all", "--port", "30001" ]
#    volumes:
#      - ./data/mongo-1:/data/db
    ports:
      - 30001:30001
    healthcheck:
      test: test $$(echo "rs.initiate({_id:'my-replica-set',members:[{_id:0,host:\"mongo1:30001\"},{_id:1,host:\"mongo2:30002\"},{_id:2,host:\"mongo3:30003\"}]}).ok || rs.status().ok" | mongo --port 30001 --quiet) -eq 1
      interval: 10s
      start_period: 30s

  mongo2:
    image: mongo:latest
    container_name: mongo2
    command: [ "--replSet", "my-replica-set", "--bind_ip_all", "--port", "30002" ]
#    volumes:
#      - ./data/mongo-2:/data/db
    ports:
      - 30002:30002

  mongo3:
    image: mongo:latest
    container_name: mongo3
    command: [ "--replSet", "my-replica-set", "--bind_ip_all", "--port", "30003" ]
#    volumes:
#      - ./data/mongo-3:/data/db
    ports:
      - 30003:30003


  mongo-express:
    image: mongo-express
    restart: always
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_PORT: 30001
      ME_CONFIG_MONGODB_SERVER: mongo1,mongo2,mongo3

volumes:
  eventstore-volume-data:
  eventstore-volume-logs:
