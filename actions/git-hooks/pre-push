#!/usr/bin/bash

# An example hook script to verify what is about to be pushed.  Called by "git
# push" after it has checked the remote status, but before anything has been
# pushed.  If this script exits with a non-zero status nothing will be pushed.
#
# This hook is called with the following parameters:
#
# $1 -- Name of the remote to which the push is being done
# $2 -- URL to which the push is being done
#
# If pushing without using a named remote those arguments will be equal.
#
# Information about the commits which are being pushed is supplied as lines to
# the standard input in the form:
#
#   <local ref> <local oid> <remote ref> <remote oid>
#
# This sample shows how to prevent push of commits where the log message starts
# with "WIP" (work in progress).
remote="$1"
url="$2"

zero=$(git hash-object --stdin </dev/null | tr '[0-9a-f]' '0')

PREFIX="[pre-push]"
echo "$PREFIX Running hook..."


# check for running containers
# TODO
echo "$PREFIX Checking docker-compose"
cd artifacts
if [[ -w $(which docker-compose) ]]; then
	docker-compose ps	
else
	sudo docker-compose ps
fi

if [ $? != 0 ]; then
	>&2 echo "[pre-push] Please ensure docker-compose is up and running."
	exit 1
fi

# check for localhost:9000 listening
# TODO
if [ $? != 0 ]; then
	# TODO start webapp
fi

# run integration tests
if [ $? != 0 ]; then
	>&2 echo "[pre-push] Integration tests failed, see output above."
	exit 1
fi

# run e2e tests
if [ $? != 0 ]; then
	>&2 echo "[pre-push] E2E tests failed, see output above."
	exit 1
fi

exit 0
